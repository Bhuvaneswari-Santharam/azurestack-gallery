{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalObjectId": {
      "metadata": {
        "description": "The service principal object ID (used by the Deployment to assign roles to your service principle). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "scope": "[resourceGroup().id]",
    "roleNameGuid": "[guid(resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2015-07-01",
      "name": "[variables('roleNameGuid')]",
      "properties": {
        "roleDefinitionId": "[variables('Contributor')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "scope": "[variables('scope')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}