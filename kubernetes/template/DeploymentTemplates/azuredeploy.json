{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
