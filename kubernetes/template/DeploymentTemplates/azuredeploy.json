{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalObjectId": {
      "metadata": {
        "description": "The service principal object ID (used by the Deployment to assign roles to your service principle). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]",
    "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
    "scope": "[resourceGroup().id]",
    "roleNameGuid":"[guid(resourceGroup().id)]"
  },
  "resources": [
    {
      "type": "Microsoft.Authorization/roleAssignments",
      "apiVersion": "2015-07-01",
      "name": "[variables('roleNameGuid')]",
      "properties": {
        "roleDefinitionId": "[variables('Contributor')]",
        "principalId": "[parameters('servicePrincipalObjectId')]",
        "scope": "[variables('scope')]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}