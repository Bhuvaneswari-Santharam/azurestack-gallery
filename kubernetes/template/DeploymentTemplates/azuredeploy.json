{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9xbe5PaOLb/u/0pznVcS3JrzaPz2GlSzC4D7gw33cDFdGayMylH2AIUjOVIMmkyyXe/JfmBbcwjPalbNTt/TLB0dN4++h1ZzbEAE2sadpcUdFsgJkiwAA+HPt3KX6+jGWYBFpiD60dcYKZrHhLZkkkUBJIO8baufVpStCaaxn2MQ7hsatojsF1GQgEhYmiNBWY8XWjZo7tJz3JeTUZ3Y2fYvbXaYFSM6smC8d1PN4PeYOz0h3YbjPxjSjK1ht3h1Bn022Bkv0uT9t1Pdm8yGE8Ho2GBsjSRLuv2bwdD5862JomKxYGU7LZrT62JVMYZT6zrwa9tMPbGMp6vrOHU6Y3uhlPJcPdUJLAH/7ayeflQEpYyyD+WSBIWuaeU4PUPttP9993Ecno3o7v+eDJ6M+hbE+eNNbEHo2EbjBMUehbIV9JjWQCzp5TAtn924mi9tt62wSg870X3+n/7w3x45XPGaTqadF9Zzngyuh7cSHGlkZRw0LeG08H0rWO/tafWbRuM0ogOMWVtzEigUl4sMfAtF3gNJJhTtkaC0KCmPeKRRyEK0BqDiTSGBdu6a88hc2eOiB8x/PgJ/AFynGDeMVov4RMiomNcvgS+JHMBf/tb/OMlzCkDAiQA4zHHH6EFRrLsyUvwKBh//OvrS/gNjH+CiT9CE+CdXDxjGK3gyxeIXytDspf0AX4JygjrHruRwB78rhv/+l0Hg4Aga8xfwlfNXWJ35aDAc9Z0gx30OWKYC+SuHJcGc7KImLJT2qBdkDn8BiYHowXv4KV0SaBdxB69plHgyQmp/fiXPqDAA8LhR2jCbCsw17UL7HOsXaQLiI8lvUcxh4AKwPeEi2y59ASHz5hR8HGwEMs6WIxRBksUhjjwwIuYDMssIr6XxocEYSSgOx7AmnrYl0ySogQenpOASFPqutThnghoaRdzkhpwSzeSjdECQcG41LULFdj1Rg4ZlylZnwa4KHQnboY49oAGca4ItA7zqVLXta+aS4MNZsIR1HExE8qtABDHqZbMKs4U5sTHtd2s0YIvSsSLZ2CaHnaph+FHkGzqHzgNFKWLxG4EvsCHj1Cre0igGnwBwcCUSVDJx+hZk+ngetDrTi1nfP2rczPqdWWtU3zHXdv+ZTTpd4zHlSJCxPknyry8mCfaTnm9VzBNridz4iKBdUVEQxxw7kO4cnnrEkyZBocUAtP1JQMOZkBXeMvBpJEo0u9opWYkAPlP20jNOKAZCQSFFd4+RKeAZjp5mEOi02vr7WldvmraPApcmSSAAx4x3Nv5hz9+ouVyRL8LPaSUzfmQxwo/gh4Nt1leylfZlq8yMEpFnl6GQJKgMGQ0ZEQOcUGZmphhiKQM7NVjN6kab0+7vdfOZDSaOnkfJLvxuDv9uaM3Nog1fDJrfEJogQPRyJtRD/FaP8mvb9nTlFvEWcOnLvIbfIkYbrjIzNvcQJ95TkDdZeI0/0Tf68HwlTUZTwbDaed9Guf7582rOMpnWixjLaNszkmwwCyUW8X72Geqdrjh+ayOEmZeOc9/f8K6TNIR2xII8k1ebp/lidwC/VxZZYtPSCqTJ3LijDdLKbbn7hR93lrTbr877TrWsD8eST/rKUxMRxprLJCsvA0ceCElgeD/RCExN5hxQoPOZbP13Gy2zGYrzlo3Yn5R9YPCZMHIFQOcwyZ1vQqBwHNoNeOcRKEwF1gkBoO5TVkNAi6Q78vqEaJ7BUW4UFvsGgUkjPx0EzuPP4nZKV6VQj58VDL+xx4N/5yEDx+rBUiHfjMzFYUdu+/o355Pg6w092zTChYkwMBwSBszhgJ32YY13+GvT5StfIo8/ndg2MeIYxN95mbrh1ZL1xZEgOtLKLIUIuTtRmNBxDKa1V26blRyaSCXmziWac72WGquBzuKVOdfMCCGYUGTbTviGFAQIzU5lLNjRgLEtvUUYI9CHMOgzyRUQAbmjK7ViLQYZF1Poh3DrJVHmGQSPwrEwPx8v5kDvkfr0FfVPrUpZ0pdLD5rKU7LWTgjQSNzvES4ZBEAmZdIENtKkIk2iPho5uO6rsUIdw56vSF57Oj1A4g3pwu+x7oWY9wEUhK53S9KNHWw7ol0339JSBzj0DnRNOvXqWwZb1RH09GNPwotTqNR6Gjr+Uaq7vo08lAY1r/qWqkMdfQ0Q9YoQAu8xoEoLjYKgvXUbYVRILxdpit0zak4RVga07XKd+ayCU+bFXgnUaA2Ua3PBleCmV63iGeW0Xqm9qiaNv357vanePMzHu/tficxSmHHS3fBL+DKvdCrdWoyOy4zlNt+kmg7zTRQZe24vu0aGDs1Nc2+u74e/GrZTtquZtE7EqndqtfW2zfdu5upTIxOfYMi/2iINfm/TIQTs+lkOVQitoZvBpPR8NYaThWzzs60nlyiaen+1HkfV09TRVtWxIfvie81LVOw25sO3lhOfzCxetPR5G22Mw76nfdxa5SqAGk/giL5qgqSVBkUeQQHLua135rvci3Ke03THglG1qAjb871uErJ9pLOwacLIgF5rKksH0TIetHtX9taXCnKxwbQ6YAu53V4p6likewjqg6oiSN2ZVE/0yqloJXoV2rwZCdqYqjxhjTsv41Go0DwPn3LTyoj32jdOE0XV76Cud3+/4u171X5fJTFRxr8dwgR4xjs8dDp3QzUAZnVm1hTuY3J/Tmc36sjirRx1R4lzbeaSVpURbHCW3h4tKua0o7Ow0BaF/cs+R5xN6Xa0EPt5o4snN/rWvlYAYx9u6vb42KDevgMQHp4F8tXk+7459MBXDAULqsjtmPVvbmxJm8P80C+j9m2mktSe0cbzBjJDmQ8PJclMIYdn4hYqlGXMoZdARvkR5gDCUqHN5TFZPvnRTVtBwsq4Uj201xlp+GnTkfV6UmWN0VI8WB+9SL+UEdsD+dWOprLcEu9Xi8iFy3XtfRGw+vBq7uJShtnat2OJZQ5StA2c6eOAq9DJf2rfpDtMY55Zimf9JxndzZSSJFdDgiqDh9TUOqG1fDz4R41DqmtpUer+kGSQwj04IIjR7F7WXKYydnns8WcKB28y5CVT+fNmU9nHuGrr7r2SPUW6YDSuBvDcuITsbWxiD2k753oqyKcLsz5CJL/4kgiccREVWpME7FFWSjopQEdavWQ0VBiOczrCkKOKfXHjMpc4r8139VRbkky3jFKfGQd+z3TMRNvC8rQAnddl0aBAL34fI5wHq/I5BY5fA+xayQLZCLgpLwfD/tdvfxa9kEg7tNkuxR4sI5P42unsqKmaxcXZ37DOKHJkZczxRcK+nb7gDiXDWUluMh5imO2IS4eMxK4JER+5jPsMiw0Tfu23Nx1DPnuoRgcheJTOQxzGjEX36rOj00oFbluBzp5NnFmZLLOAd9wBBXmqA7rl/jnNmtM011eqnYO79qXs1TOoOwZMPaIusgVZIP7RMIIuoMkx5VNZw75twilcpxKE4fVKqCsgjJFFiUNyo17uVc7P6/ysktMDlodo768rsnIETuLSLBoaby6JO5gWw3G4akj6RqXtlQBO5rPyb1U4yCzQ/rkG/bc8sLwYT1WePtGopf+0K7QIc+kJL+q7wejcvTs4L+5LahRxaykRe5gonAd4IjM9LRQSsitKDHeu05RccPi2FbmBXzMcGLI3spM2Ok9ON76OvmLG0VNdzc28rc3zuC8WdvkM+7kFlWrVTQs1Sd/D6TSdbFG+YcjXFNdcuSlgJTb5b3++XDEiSc7f7G11al7p7yyJKh45aZ8BacoxidBdJ+VdG9NgjuOmbq+0SmvLL+/+YspIBFtfuCrfkQQ58t6GM184r7GWxXKFd72kUDq3c2zkZDpJGY6jJj0c290PBwNPfww5NvwTg5eSbBRfCy4+hDQcn2CAzHwlJPzy8uBLQO5XRUtSa6YPkuTFd6qc1lbQb8JntdVCR/0S6rt8z9f1eQ5fgXOpHug8vGvYfLSnCfrL5DY1UeYf520rTr3O0ti3JFUxvIvEDbZnn2H21na7dv+YNIxxr/0U4MixnAgwEsxPxDeBkPRZR/K+uourOIq8Dr0ZWsV8X35JIAUO8GC0SisABlSi3yjqdpf7NNPyTXD8lfJ5CKu+uYSszYT1hUXZWXWSL4mDjYSOxe/64BpZjCrAMtMk0czrm7pEhqYxDt0IxZMM85cRVPM+2wqybSKRDVNFImlucZiST2IyZ2E3DRRSMzYj4cTQXoOeXOu3HbSYzuO9Uar3mrFJ3Q5L+jq8pEOFR7AL/6BZ+5TbLZeNJ+Zz55eeebsudc08T+al0+fuy+w++KqZJCeWJS/+ibdsns0QySWoLvt3z26RiSou5hJkpCRjZxe4e0eyQpv9UJc9W72fqnPc3ohKvrlU3x56bk/mMi7emY+Q17TvJo1r0z89PLq6sXV/PnzZlOHs7f4i/09/uL7JOrpcB9M2G/K2Iqcy39YrgjQgXuG+2EqXf478fIdfHUKh7W5bek7Ofo/uiKorxPJRYWkNnOgkQijYlFXZ9oNJ55pVF3MT7+XBl7x7x8q/gCirv9fAAAA//8n1F1KNjEAAA=='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}