{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}