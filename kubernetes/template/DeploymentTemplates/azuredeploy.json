{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/9xbe5PaOLb/u/0pznVcS3JrbejOY7dJMbsMuDPcdAMX05nJzqQcYQvQtLEcSSZNJv3db0l+YBvzSG/qVs3OHxMsHZ23j35HVnMswMSahr0lBd0RiAkSLsDHUUA38tfbeIZZiAXm4AUxF5jpmo9EvmQSh6GkQ7yta5+XFK2IpvEA4wguWpr2BByPkUhAhBhaYYEZzxbazuh20rPdN5PR7dgddm/sNhg1o3q6YHz74/WgNxi7/aHTBqP4mJFM7WF3OHUH/TYY+e/KpHP7o9ObDMbTwWhYoqxMZMu6/ZvB0L117EmqYnkgI7vpOlN7IpVxxxP7avBLG4ydsZznG3s4dXuj2+FUMtw+lQmcwb/sfF4+VIRlDIqPFZKUReEpI3j7d8ft/ut2Yru969FtfzwZvRv07Yn7zp44g9GwDcYRCj0P5BvpsTyA+VNG4Dg/uUm03trv22CUnneie/W//WExvPI55zQdTbpvbHc8GV0NrqW4ykhGOOjbw+lg+t513jtT+6YNRmVEh4SyMWYkVCkvlhj4hgu8AhLOKVshQWjY0J7w2KcQh2iFwUQaw4JtvJXvkrk7RySIGX76DP4AOU4w7xjnr+EzIqJjXLwGviRzAX/5S/LjNcwpAwIkBOMpx5/gHIx02bPX4FMw/vjnw2v4FYx/gIk/QQvgg1w8YxjdwdevkLxWhmQv6UP8GpQR9j32YoF9+E03/vmbDgYBQVaYv4YHzVti785Foe+u6Bq76EvMMBfIu3M9Gs7JImbKTmmDdkbm8CuYHIxz+ACvpUtC7Szx6BWNQ19OSO3HP/cBhT4QDj9AC2YbgbmuneGAY+0sW0ACLOl9ijmEVAC+J1zky6UnOHzBjEKAw4VYWmAzRhksURTh0Ac/ZjIss5gEfhYfEkaxgO54ACvq40AySYsS+HhOQiJNsXSpwz0RcK6dzUlmwA1dSzbGOQgKxoWunanArtZyyLjIyPo0xGWhW3EzxLEPNExyRaBVVEwVS9ceNI+Ga8yEK6jrYSaUWwEgiVMjnVWcKcxJgBvbWeMcvioRr16AafrYoz6GH0CysX7nNFSUHhLbEfgKv3+ChuUjgRrwFQQDUyZBLR+jZ0+mg6tBrzu13fHVL+71qNeVtU7xHXcd5+fRpN8xntaKiBDnnynzi2KeaVvl9V7JNLmezImHBNYVEY1wyHkA0Z3Hzy/AlGmwTyEwvUAy4GCG9A5vOJg0FmX6La3UjIQg/2kbmRl7NCOhoHCHN4/RKaS5Tj7mkOr01n5/XJcHTZvHoSeTBHDIY4Z7W//wp8+0Qo7ot5GPlLIFH/JE4SfQo9Emz0v5KjvyVQZGqSjSyxBIEhRFjEaMyCEuKFMTMwyxlIF9K3GTqvHOtNt7605Go6lb9EG6G4+70586enONWDMgs+ZnhBY4FM2iGVaEV/pRfn3bmWbcYs6aAfVQ0ORLxHDTQ2bR5ib6wgsCLI+J4/xTfa8Gwzf2ZDwZDKedj1mc71+2LpMon2ixjLWMsjkn4QKzSG4VHxOfqdrhRaezOkiYe+U0//0b1uWSDtiWQpBv8nL7JE8UFuinyqpafERSlTyVk2S8WUmxHXdn6PPGnnb73WnXtYf98Uj6Wc9gYjbSXGGBZOVt4tCPKAkF/weKiLnGjBMadi5a5y/N1rnZOk+y1otZUFZ9rzBZMArFABewiaXXIRB4CeetJCdRJMwFFqnBYG4yVoOQCxQEsnpE6F5BES7UFrtCIYniINvETuNPEnaKV62Q3z8pGf/jjIb/noTfP9ULkA79ZmYqClt239G/vYCGeWnuOaYdLkiIgeGINmcMhd6yDSu+xV+fKbsLKPL5XwF94SuUtFYLIsALJAZZChHxdrO5IGIZzyyPrpq1y5vI4yZOhJmzLS/N82E7lWn5MwbEMCxoulHHHAMKE2wmhwqaz0iI2MbKIPUowgnw+UIiBV1gzuhKjUgbQVbyNL4JsLrzCZNMkkeBGJhf7tdzwPdoFQWqvmfGFGywxOKLliGzgmkzEjZzV0tMSxYhkHmFBLGNhJVojUiAZgG2dC3BtHPQrabksaXX92Dcgi74HutagmpTEEnkBr+o0Fhg3xPpvv+SIDhBnnOiafYvU9kkXqsepqMbf5Sammaz1MNaxdbJ8gIa+yiKrAddqxSejp6lxgqFaIFXOBTlxUZJsJ65rTQKhLerdKU+OROnCCtjulb7lly04HmrBuGkCjQmqtlZ41r40uuWEcwyXs3UrtTQpj/d3vyYbHfG05397igqKe1x2b73FTy5+/mNTkNmx0WOa9vPUm2nuQaqkB3Wt90AY6umpjm3V1eDX2zHzRrUPHoHIrVd9dZ+/657ez2VidGx1igODoZYk//LRbgJm06eQxVie/huMBkNb+zhVDHrbE3rySWalu1InY9JvTRVtGUNfPwu+FHTcgW7vengne32BxO7Nx1N3ud74aDf+Zg0Q5kKkHUgKJavqiBplUGxT3DoYd74tfWh0JR81DTtiWBkBTry51xPqpRsKOkcArogEoInmsryQYSsF93+laMllaJ6UACdDuhyXocPmioW6c6h6oCaOGBXHvUTrVIK2ql+lZZO9p4mhgZvSsP+22g2SwQfs7f8qDLyjdaN43RJ5SuZ2+3/v1j7UZXPJ3l8pMF/hQgxjsEZD93e9UAdidm9iT2V25jckaP5vTqUyFpV7UnabquZtClVFHd4A4+Pdl0b2tF5FErrki6l2BVup1Tjua/B3JJF83tdqx4kgLFrd31DXG5J93f90sPbWL6ZdMc/HQ/ggqFoWR+xLavu9bU9eb+fBwoCzDb1XNLaO1pjxkh+BOPjuSyBCez4TMRSjXqUMewJWKMgxhxIWDmuoSwh2z0hamhbWFALR/Kf5l1+/n3sPFSdl+R5U4YUj+ZnlfGHOlR7PLfKYVyOWyzLKiMXrdCn9EbDq8Gb24lKG3dq34wllDlI0DYL54wCryIl/UHfy/YQxyKzjE92srM9DSmlyDYHBFXHjRko9aJ6+Pl4jxr71Nayw1R9L8k+BLp3wYHD150s2c/k5BPZck5UjtplyKrn8eYsoDOf8LsHXXuieotsQGncTWA5CYjYOFgkHtJ3zvBVEc4WFnwE6X9JJJE4YKIqNaaJ2KIqFPTKgA4NK2I0klgOc0tByDGlwZhRmUv819YHCxWWpOMdo8JH1rHfch1z8Y6gDC1w1/NoHArQy8+nCOfJilxumcP3EJs0jKmAo/J+2O939fJr+SeApE+T7VLowyo5f28cy4qGrp2dnfjV4ogmB17ODF8o6NvtA+JcNpS14KLgKY7Zmnh4zEjokQgFuc+wx7DQNO3bcnPbMRS7h3JwFIrP5DDMacw8fKM6PzahVBS6HegU2SSZkcs6BXzDAVRYoNqvX+qfm7wxzXZ5qdopvBtfT1I5h7InwNgD6iJPkDXuEwkj6BaSHFY2m9nn3zKUKnCqTOxXq4SySsqUWVQ0qDbu1V7t9Lwqyq4w2Wt1gvqKuqYjB+wsI8Gypcnqiri9bTUY+6cOpGtS2jIFnHg+J/dSjb3M9ulTbNgLy0vD+/W4w5t3Er30h06NDkUmFfl1fT8YtaMnB//dTUmNOmYVLQoHE6ULAAdkZqeFUkJhRYXxzgWKmjsVh7YyP+RjhlNDdlbmwo7vwcnW1yle1Shrur2jUbyvcQLn9cohX3CnsKherbJhmT7Fmx+1rks0Kj4c4JrpUiCvBKTaLu/0z/sjTnzZ+YuNo87ZO9WVFUHlSzbVSzdlMQEJ4/u8pPsrEt5yzNSFjU51ZfX9LV5FAYloiwMP+gFBnC+tKJ4FxHuLNyqUd3jTRwKpd7fIRkKmo5hpP2LST73D8Xg09PjDkG/DOwV4JcFG+bHk6n1AywsIDsXAV04uLq8GtgrktlW0Irlm+iRN7vBGncs6CvpN8NxSJXzQr6i2y/90VdPn5BU4ke6Ryie/hulLc5qsP0Fi1x9h/nnStu7c7ySJSUdSG8s/Qdhke/Yd7mNpN+/7g0nHGP/czwyKGcOhAD/D/EB4GwxFl38o66vbr4qrwKsokK1VzHflkxAy7AQLRuOoBmRILYqNpmp/cUA/pxcLq18l06u36ptLwtpMWddcjZVZI/maOFxL7Fz+rgOmmcOsEiwzTR7PuLqXS2hoEn/fHVgwzSRzFU057/OpNNNqEtU0USyW5gqLJfUhIXdTctNEETETP+5PBOk55M+5cttRj205Ws1z6/w8OaEreEFX1410qPEAfvU3PPOeY/P8VeuF+eL5pW/OXvotE/+tdfH8pfcKe68uKwbpqUXFy27SLdtHM0JiCbrX/s2nK0RCy8NMkkSMrOX0Hd7skNzhjV6Kq97N3y/1eU4vRUW/eI4vLnzv7ybyL1+YL5DfMi9nrUsTP7+4vHx1OX/5stXS4eQt/mx3jz/7Pol6PNx7E/abMrYm54oflmsCtOdm4W6YKtf9jrx8e1+d0mFtYVv6To7+j64I6utEelEhrc0caCyiuFzU1Zl2001mmnVX8bPvpaFf/ouHmj95sPT/CwAA//8BA/BBKDEAAA=='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}