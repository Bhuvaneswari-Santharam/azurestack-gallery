{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName":  "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "scriptParameters": "[concat('RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
      "publisher": "Microsoft.Azure.Extensions",
      "type": "CustomScript",
      "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}