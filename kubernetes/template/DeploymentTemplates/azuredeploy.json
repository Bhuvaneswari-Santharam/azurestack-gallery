{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8Q8/XPauLa/81ec5zCX5E5tkvTu3t106X0UnC6vCeEC6cd2O1TYArQxkleSSUjb//2NJNvYxiaku93tTDORrfMh6XzpnOMILMHGtdrBwQHUDgDgJxEtl4ivn+uR+nfB5gJYJMNIwnQNIcchpj6hc/CRxICoDwGbQ4BXOAC5DvGhyznjT+AWcUro/AkQOmPAOKwwnzKBjxxDqZkj9VOIOFoCRUvcsk6s5+N1iEEyhduBw9coID6sUBBhAYjjM7AxzBgHbGjZt3qUkrSJHivKTwAHAqfEf2pqQiVEHcexnl+ZhWJvwUBITujcyUNwLCNOxfM+o/inZjIy7/Cdh0NJGI3fbsYJ7BLxG/G8g4IA+3BL5IJQEGiJQXichFI4CqWZpM6kFrD5RO/s4RHUPkFNHYiHBAarfmIBobX4kGx8ZHi26ofqWI7gvT6FDwBnYEH90/+enX5JJgPAs2cp5O0W5Buzix8qIONfUgRkC0GPztgHeJD0P4+gCPnanFIVaT3AAnm1LztldoglX8OcrDAFjy2XSkinyQMaLaeYA5uBJEssgFCzpbcYFmiFYUEkILqGGSJBxPFe0tpPcXJF2qmWslPr+RtEpKYNUyxvMaYPAmnR7MQLkQymGPAd9iKJ/b9VPDXf3tKfkNkk3q6MoKq3BItW/eSZeXCLiGzVT+ORVlC1+/VDgX+HE6jHAEfPwGepfGk5ePrlGbyH+n/Axr/DMcAH+Mc/YMoxuoHPn0EEGIdQV+hj3D6jOP41VSFlFKxkE914+6BOjBg41jPYLVXaBimTR2YwI4E6AiKkNoBEwgIJoIzCPeYMpmuJhQO9mTJZCogwCiESAgtYshUWBoFkQPEtBMzTM/aStBGLuIfhXMH30RLvFrUuFpJQQ78KZD+R6SCqFiy1WBizCx7zMZykCqTX5DOsNkLGu8M4CHKPgQi9M86fIXXeAns3E0T9idrLCbqPOBYSeTcTj9EZmUdcL/jwCD7VtAiQGbwHW0D9BD7AM5ALnBrOgnics4j60KifNNSqQiQX0KgP3nQb5pgFzDlGEnOQC5Q7a8uYpkDgMswYLL37GnFhhwhNSCh9MNsEAaZzuXBAG3FYoFD5XPAj5ZBgGpFAO2BCla9qD3qwZD4OFAIviITiz8czQomWKivlSJ/fiVE+Usva8fwuXLKVQj9LWZYMGvXThsEkIp/BcqV2s35armJhgJVueWqzFKYNixqnFiFjjIVEy1D7ab5EMbs7tbCjDwAG7qXBNUUC+8Bogg97HMv9NAnzFfEwhJxQj4QBToB3alQHc0lmxNNMnL81TNDdivi0AJbwXgL219pvj9EV5nIi2cTDXG40Jn+iXewxLXBmg5Q4/CZSydIuvH4Cn/VZfP8vsG0fa9PwHBRWR83dIW0jtIqjSWQiPIW/fupYWRAPyQ0y+Ay//Q4NR4E04DNIDrYPv1qlLMQyWk7bvZMceVpG5QJrE33LuB+vbNAejd5cDbut+mEp/WR6loejsg3smH1Ol0moZBDiJRixj8mxEFMhAghvPHFyCrZyjadgU+ZjAbYiRowXOasnnIHNIgn1pw/EQx0WrrUeKlM5UqYSOGNmRYlUSgYoDDkLOVFDIVlV7PPXyiimIuI4oz/i8Kj2qWSTr0PfWJvMqkTpsixzRu1frofuaNzuvJoMr67Gk447HPfOe5322J2Mrq6HHXcyaI9/blnNFeLNgEybtwjNMZXNLDdOiJfWg/i67micYIsEbyqfHzTFAnHc9JCdZbmJ7kWGgONxae0QYXW2eskw42wJjfqey4qt+l5MNyBj+r0Q9qWxe2KKPre6PVCf9/ov3eFg2OuPWx8Trbn77vhHozP7MmdTprTHnhE6x1y5AflxX04073+Aj3TtpVyU2ZDH7cvZXtuQAbAeSbK4AQ8QLE6PVTBSOovtggaYdwfGXEHnogcixJ56C94C0TkWjvE8dyHjEobuf6/d0Xg06bQnL6773Qu31cTSawoRNBVaUdQwpVIbeVbxg010kPZrHX0VMgv0HExXhDO6xFRWirQbb/2lO2532+P2xO13B1dKgqz62O23++P0SXOJJVL+oompHzJCpfgPCom9wlwQRlunxyff2ccn9vGJOTwv4kH+FCqJaX8BL5AgHvhYIhIIfSFeYBBrIfGyVvDREhn39SqaYk6xsqybUDMM2Fot2rEKYMOIUgUV23ZAAs6gfni7YGhJjqxakYomnY0G1Wx9SJGKlcBGR1btTbs3nox7l+5k5Hau+t1R6/S4gEjdsHUEyzjUt+arMIZRX+jXZrnKFs6xNI5ZSDRV0aBU1teqxbfLLTRqB0dmXTqCwxJzUWDE/pP+FTe2pyP/lGxyhmfFee3uZa8/uR65w3770lU6mnuwNf2l2x9POlfXRp83o/KJo94vbjpPDbbY7Lr9cW/8bjJ6Nxq7l2dQLzyxoADx6ofRREvwpHNxdd0dDK9e97rucPLaHY56V/0zqD8wo8jCZXs0dofpmrLDiqnd/mgyGLrnvbeb+ZtnFUDxVmRGxYmD6xcXvU5voHCdQT07rJx6/t9uPztXjbd0zH3Zu+pP4vPNjLYnxtbg5fDqerAB2HpaBByNfp4YFl65786gnhtvTR5fDdsv3clgeHXeu1AUCk+KALHR63XPoJ7+XjFpdP1i1Bn2BmO1xixE4UUR/M9TQxWS/vn/agfQo0KiIAD1P+T494gIIrFT1A8d5OKModY5cuWHlPUtycfBd3BybBwdCqWtjJxxumCvi/Y35kFZzhDdGfOoc+CwRJSEUZDc0PejQ+IlKVw7if32u6b1f6Or/h+j9NvvuwkpD/lopNqt7kSrICRHVKhwxF5IGQpTFxFTm+MAI4FBHynHvl5pGtg8mpkyUlkyO/kUbCZvEce2ug+pEAYL22PLJaOaXZ/wJZ3zP4vVHdQSStvcxvIdyzaaI0L/mIR/G3UdYU/nVCVLl7vZqNqBPpezZtNnnnCWxONMbYbjsWUTUztSV7yIY/PT1qnLZiQwzz5Iojy1ezMSYGHrl15ATg88Rin2pC2ZnYHYg6wXkJh0zHUM7wXERqH8z4rg29bmkdl1qNXav0yG7uCqVT8MxHSSyponjmpDt/N68sp913rR+e70h+9/+P7Fd8fdf//oPn36Y/fpv09POu6Lp+6P/2p3X7gnp6c/ds5V2HTJfDJbw5pFHIROaAsIiJA1Uw7y8RTeI+4tWmjpf/+vD5AsLETeDVLhf35xHIcs3lPFd1MFwZphWCJCLfgMv9a0fEiMTaSOQtmMCTuKsONvwPWDWu3gJZZwmdABQeY6lL3B64LIqnnKHpfO3Utkb/AabPVT29qUQclVgO0783Du+M0UvRoD8lcGRGC+whzKdwZsm2NvpecpV2+O6pvq3C4zqTVE7bDjPN7wJcdTJLC5JMYao68Y6B7sRIWOvp3b3rYDTcV0+9XIdumcUAxTQhFfO9syYxLjWxMVrzBm6spjNjTRtilH1FukkT4sxabwccv4TcCQL54AuhdLpO5l1fs7JxK8gFGc6tWcyEU01bpUiraJboSNDZ/2NEPD82HzqngybzAgjmHOdHqVQSQwmCqSqFx8aXoW7kmoM+bqNqarDzc+4QooVmvEwb6/W80A36FlGODYGBjLumHQkfP7WlK+yCxpSmizyHxngb0bXWSZFaYivgYiAK0QCdRF0bFqpsA0A8tpKlyb+Va+4FRWbMqwh++wVUtrSPn60SURQitRbroD7p2+6v5PnIs3FZ4Z+XaBamwtiklWTuYLmZYy1U1fLvBaC0AaT9QOdEihdFXFG+1XIwUZezP1q9FlnaCu1dy3Y3VLvdC3npZV/5S7BjWbuSuUk735OF7AIh+FofPFqhWSKi0rEfolomiOdd4iB1zPEbZqo+vz895bdzRJLjIpqh1gG6hX7rvX7euLseKy5axQFOykV1M/UhITg6aVLqgw2e2/7g2v+pfqAq6QtTYZ/o4CKUp1DhqIOCsutvTalXCjAQrPrFqpoTk9hqfHsJ27/3ZymTHFnqkRFqqOOppNTY6j7Ow54UKCricrPS8AmPqs7h5SelW04VcrzDkxnVB4ps41U930GOdKqOOWJUL3KNOmVqTUiqW/2jdpDu6hZIiuVu1hgxTfZ/D1JJxys0XisvfXIy4Uy1NzpwOIosGDTsVBLpAAwZbYFN8YNwg355pJmXau+ue9l9fDts4kjN3LgbI8Oyec2ZkOBImXoeb8i1WJdhfGLLIEz3a9JytzhbVKBvXBm27iKb2w3Cd+/YnUq1ivJW0WVuWUPUSxElZ3Cg3edB/oxNgtidXYt7syNLHtnowtuUuS662PJlNga3uoAq2vT+h/rKUe4OWwPfh543M+mnJ7QhSSWvSco3DhxmizBeksqvbFhTt8V40DBQHm6wewtDvj3mt30u0N3c74avguLTP0upWYUaQOXZK40QlFPsHUw6Lx/vhDjkrBXcWcAPIkWWHwiTKqjK+BY3N9A6KE4Qzq+7CngmstpMU0NLRaYLW756OCgB7AmJMlWMifCcvUVzH1gc2UbBEKyTEqm0OkkhSFpET4elS/AbFxUnMsD9t6WZNusqxJsuAnMBr0J52Lns6su52hOz6CXHdT0nJUve4HRaZwKHpJZWcPn02NDENDNNVW/LPebOYmfCwrHhaPbLNZu89rE1lka2gHMEBc4O19SUo34exOm4akKUMP5phirmKBEC8h0gH04PxtCbcKeb7DReNU92GFc2ayoeYMPUwRJyw+gGyVc3D+dnJx1YmtvAip2mInnN2VTHUvy6YmvQSFzhyob6+7XkW58CZDqOyYpsZpqOUOzt/GHThE3aIblRQaYLYFLzfzG5VUG5sWtCrjrPSj3d1bPbZ04a9Thm8k6iaA0WVWc/FPG/B0OKl7R5MGeKdWKKmogKJYd7GnAZv6RNx8sWoH+uqdPDB3L3N7JQGR6xGWxixaW7UabRgTwIxx3NV+IxdbobdOj3hB5BsuQLMRLybbWYLkDg+tD8q2EZ8XuQer8MCChrPJOju6aWfAWDCIc6nvjz84KAMSP2/VC3gaOnWo+EtJjyTjaI7bnsciKsHKj/chLAxESjOP4Y+SNImZGPmDtJ5X77eObUub2ZLMiJKjpWkVbTwkYA3zFYh2oSpGTuViiQgFFJKMuMQisWeb7wMr2BGvKp17nNztE2TsF4rkD82LhGRLfWNPTi7TS+II06l6mSYs0riotR+1xudfa3ssIr3n72GyHrUAE76ldnw/9pM3RiO22c8HxhlMhRePYTQXRefYyyMt8FTMkxQD/0fxkIS25rh5lpsC2sqdMXF+lvv4yaP2In8byO+GwVdgoDJTBvXqV49SBGO+EpZG0WxG7hRjleirOMxm5TLguceP4ewGr1+r63i3PyrhKou2wFFZug/qpU//gBC9vswxVoa+wFcmQ5nrKoGGkyZ5W7k3BQRbnTMlzTS7XJdPxYDjmOEtyJTYw/7WuLpWtp0pz+mmfynby7QH5tVyRO5xKwNUzlZ+YQk/2Vak0q0zHGUHO7AmvGSmFw4k3/pVbAXL4w4Ije4S1MhfEnotMNc9eK0iZFHFst1BoCLT7IMv1g5CQiycMJoGxHuF13qHb/C6iyTSypRFoyKXB0OXh8OWTSSiM4OV4cg3D0X2T0vsl1yIa4eHceQwMJ+4oER6n0D+unOJ5YL5UJFiKHA1ubh64w7ji5S13dGn70qN92dRGGJ+9qGhfg/Yrf7941cE+6Xkt/YqfvyQjSS+WrVcm1bTVjmWkhi8dL8sLyCYykmmFmY9yEEZpla97GnZVWCTBVCRZn6Yo1xx8o5huedrlcqC76Zmcg4bR1agXvJ6L25u8FpXxEY67TLEM1Mg63UL7G3jfxy78dgYvj3nfeUCTAapH5vK/WjtY86qvwBpm68DkT8TMEXeja6kVqYkkIhTlWlZltBMp71kwPGc6OpU/G0/ofunV+qfHp70RXFamqGnKIAi2IZzk2qaMW6Wumdupbo2tZ10esBsVhnIx9mzv1mHy1KJe1GNU6NlQr2P/M62Once9shVB3H0d7rqqq9d089yC8mv9AvVOIm39cmrXj+TC93GlXxI4HzDXuNRNs0aJ8jbw0u9+YEamEx5+9UITLH8SVzviJ+nxkJ3jerPP3TWL4F3agfw97RA/vzuxbDXTfOip8cnP9jHT+3jE3uxnnLiF1viE0uX9J6YbyN1t0W82CkO2G3yRyR2da2h+xguNZ82VfYp36ABtp3YMzu5o9mmE4Vvpw1sW+g7mx1ffFPYXRfqFCjxTbZPRdUdN8OOSdLYqcvY8Ef8PZNaO7DtlVPaxY1OzVTwlE/OFL9IwDIWWS0jkL0m73Oe+m/klBxleRelgYkl1iTvtd86g3peOPeinTQyJypQRPLIemae4wut00r01e0hsy1FPY/d3C52jX2w7dhg22FiscGOij4O7FAX15uVFSOwbYkpUnKefhJS5cU3q2h3/8JFqDVsO9Iyvrcd3yju/hTR1HwYFxvjyq9ZdjGN4rKAFlM7h7ICHzyHpo9XTRoFQZG1l7v9QdI89VD3brEPcuNn9nasOQYScB9UlKVkZ2L+JFWzJKmU2gwH+sp2L5DiQX/9wZVg6D/roXyf/osRiC83dDagVs3zH6RU5Llb4gutGrqHOWdRmPlSMmlRs+elX2BpOTLw9iztoDLgpgvHtjehQu5tJoLQE3ec9c5vOeFW/ZALzqL5Amb60P8/AAD//9Iu6nMuTAAA'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}