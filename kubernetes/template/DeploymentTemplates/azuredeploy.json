{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}