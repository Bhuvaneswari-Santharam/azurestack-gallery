{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}