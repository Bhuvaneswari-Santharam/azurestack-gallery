{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "blobdisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/acs-engine/blob/master/docs/serviceprincipal.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "metadata": {
        "description": "the service Principal Certificate KeyVault Url"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the kubernetes Azure cloud provider. We would use a custom kubernetes build specifically for AzureStack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName":  "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "servicePrincipalClientSecretCert": "{\"reference\": { \"keyVault\": { \"id\": \"parameters('servicePrincipalCertificateKeyVaultId')\"},\"secretName\": \"parameters('servicePrincipalCertificateKeyVaultSecretName')\"}}",
    "scriptParameters": "[concat('SERVICE_PRINCIPAL_CLIENT_SECRET=',variables('singleQuote'),variables('servicePrincipalClientSecretCert'),variables('singleQuote'), ' IDENTITY_SYSTEM=',parameters('identitySystem'),' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/6xZbXPbNhL+bP6KPZZTtzNHSvZMZ1p51FaV6JRn6+VEya2bZBiIhCTUJMAAoGK58X+/Ad9E0pKs5poPGQPcffZZYLFYaAWWYGJNw/6age5KxCWhKwhwHLKt+usmWWBOscQC/DAREnNdC5AsVaYJpUoOiY6ufVozFBFNEyHGMVy2Ne0rcH1OYgkx4ijCEnNRKNrueD7t296b6Xg+8Ua9od0BY8+snitM5r/cOn1n4g1GbgeM6rAQmdmj3mjmOYMOGOXfjY/u/Be3P3UmM2c8qkk2PhRqvcHQGXlz157mFOsThdiw587sqSLjTab2tfN7B4wXcyXmG3s08/rj+WimAHejuoDr/GGX39WgYawAqA4bIjlEZVQI3Hzver0/5lPb69+O54PJdHznDOypd2dPXWc86oDxioRebuQbtWLlBpajQsB1f/Wy3bqx7ztg1MYvdvf6v4NRdXvVuESajae9N7Y3mY6vnVtlrjFTCtrTO6evpp1R35n0br3+rZOuot2f2mrNXpEogJyBPZo5s3vPvXdn9rADRmNGzw/C+YQTmp4ducYgtkLiCAhdMh4hSRg910QSMEgoijCYSNM4lnzrR4FHlt4SkTDh+Jtv4S9Q8wSLrnFxBZ8QkV3j8grEmiwlfP119scVLBkHAoSC8Y3AH+ECjFzt2ysIGBh//fx8BW/B+AlM/BHaAO+V8oJj9ACfP0N2Pg0Fr+QpvoLUCfsR+4nEAbzTjZ/f6WAQkCTC4gqeNX+N/QcP0cCL2AZ76CnhWEjkP3g+o0uySnjqp/JBOyNLeAumAOMC3sOVWhKqnWUres0SGqgPiv3ktwEgGgAR8CO0YbGVWOjaGQ4F1s4KBRJiJR8wLIAyCfiRCFmqq5UQ8IQ5gxDTlVxbYHPOOKxRHGMaQJBwtS2LhIRBsT+ExomE3sSBiAU4VCB5doMALwklyhVLVxweiYQL7WxJCgeGbKNgjAuQDIxLXTtLdzbaqCnjshAbMIrrRnfmFkjgABjNYkWiKK6GiqVrz3n4zWOVayshZen7Age+g4s2pDRQLM0VlpBkmua2SNQOFRKFoSITo8c0goRMVyZClMRJWNg+DZ9kcCnWXiN/fkxt/Mcdj/4/C39+3G/AT3j4t8GUUgXun1vfcyeKGZcpFGdMQr+n4kNIxrGVH34/htYG8VZIFq1PCK0wla0+5pIsiY8kFlaMI2glgrdC5qOwJdaI45aPTL8i1EJPoqJk+VzmqSVlZDbEC3rTND9sMl976vC66vCWXCs6INdJtIhVPjvXZr/Oh7+oJDnrGt+wGFMhQnj8rv0DmISe4I65JHSFeYoGJmUskfAZ/ESCGZx3z8FcwiV8BsnBDKDzbc52VjJIg+g43845GDuaxdb2Q0bLk9d3TZuuCMXAccxaC46ov+5AJHZp7BPjDyFDgfg3IF+YOBU3N+3L9g/mxfftH3RtRST4oTrWaylj0Wm1VkSuk4Xls6i1F6q1QwJzsR9X84PKh4L9bxgQx7BiqQsMEoEB0Sz1qamKRwtCEd9axY01jnGWV55IDEuVO5ecRVlc4piBCq38HGZ56yEgXIFkQ4k4mE+PmyXgRxTFYRpwhWMVfyy5etKKxFdxc0Foq9wCdWWQFQWybIggvlVZG20QCdEixJauZVfGEnSrpTB28vqBK6TCBT9iXcsujTxHEyHSqrQmY4H9SNTy/UvdMVliXxJNs3+fqWLuNq01urrxV634aLVqtaZVLXEsP2RJgOLYeta1vI60R4PJWJ0XvQiTCFG0whGmsq5s1Aw36tQCZlegFjO6prnz62vnd9v1ivqnNHrEwE7rxr6/681vZ8qfrrVBSXiUmab+K014GUy3dL0hbI/unOl4NFTFlALr7k5vX6lo2tCe9Qa9Wa/7IUvHZppyVYptutqKsEQBkqiFaRAzQqX4CcXE3GAuCKPdy/bFd2b7wmxffNC0kmCvP3PubG/gTO3+bDy994pXhTPofkgX2SgoAHxWF8y5hRIVYZLkhwMlAcHUx+L8bft9mZ/e6R+OWCn34EQbIVsRaud+ne838mbam/z6OvKKo3j9GlTv9tae3h/GQGGI+XY/Sp6XxxvMOSkrmgAvVexkaeYTket01mecY1/CBoUJFqpQq1c/jGdiLwuuc22XBvamn/JP86F8l772TrH+FIzq8F7bk0K+GM+q55u0Rv1ytEZtW+Ypy7LqmUpLkdxZr3/j9ceja+fNfNpLH6wzezhRqeuoQMeslO0SR3Fq/Vk/CHsMsQpW4OR5n8XbvSGyiwFVOk9+GxSXkB/vv26+fEWNQ7S14m2iHxQ5dOMcVDjylnkRJYdBTn7g1GOi8QRWW9Z8J5uLkC0CIh6ede2rtJYoJlLGvewaJiGRWxfLbIX0F29r6HZBLxQrawT5v2wnkTziYppqTBPxVdMo6I0JHc6tmLNY1XlYWGl5OWEsnHCmYkm8bb+3UEUln+8aDRyVx96VHEvzrmQcrXDP91lCJej18SnGRaZR2q0j/BNmI6QSZG7gVXs/Hl739PBrZ2cnvuFfATpytlQ8/r0w2BXu1SK+vg5ppVEsA8eCJdzHw7So4lPGZOXRAd0qTLYJpa1TCgQwTpI6zE9gviEFPVXzFReqonYK9smkiy/HYEuZw4SRL8kGD4i6s9nu/j9Ot/hyiGy9bqkgNT4cplUraWpk6hANBo0C8kVFeXpkVW03QA56nZVYVa75zBE/62VX3dNMu2HuYPEPxuFPRwI2yyMFATdZLsmjonEQ7BCf6rOiol6bPszjAW/vVKkwGLl7OFRBGvb3vU7A2Dt78ubfDWs09oE1WFSeT7VfwY/YLJ7iykJFowH8oouwp7Fw7N4IqJhwnDvyQrM09vqFl90z3Wq/os5016ioNi1OQN5ELnnC3YrSflp1xwo+1fbH3qXLGFUHR1ALLhXxxobUG0DNhlAdOyQ0eSwzbRAROheYp02AblOzeayqbRJQVV114lk/YkiItRUni5D4N3ibrvAD3g6QROmRqsI0bU5GRR9EXYX1Yc1efs1NOKE+iVFYbkpIMJVOkFqqqh+2lHVcauL51EkWBfY5lg17GYAqil6rik5tbHx5UfQP9AO04f3AmXbVe6B4YyWcYyohKO5tIKIDRipX9KT0QdrGTVHVay9UBVIiXtonFIr8ByvOknhPoiieas2f5/JecforTgZh5hB7erlq89X6mphu1D1X/6UITLNMibUUapoiWYi0kUwYNUlwqGkLppkFYCpTD9/yUx4we+LNNFEi12aE5ZoFkIl7ubhpopiY2Xod3uviN7x8tQWwRMZJfZvSZ13Ly7609nWJcxSbBvVm/J5uvKX/LwAA//9TYCGGwx8AAA=='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
      "publisher": "Microsoft.Azure.Extensions",
      "type": "CustomScript",
      "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/acsengine-kubernetes-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}