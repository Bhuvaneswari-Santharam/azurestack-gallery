{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
