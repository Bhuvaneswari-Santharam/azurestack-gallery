{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8R8e3fbNrL4//wU86N51vH+QtJ22m7rVNmrSHSqG1vWSnIem+YoEAlJqEmAASA/8vju9wAgKZKiZLlt2pyzXhGcFwbzwADD7v0/8KeE+lMkFpbAElxsWdbe3h5YewDws1gmCeJ3z/ST+nfG5gLYUqZLCdM7SDlOMY0InUOEJAZEI4jZHGJ8jWOQdyl+FHDO+GO4QZwSOn8MhM4YMA7XmE+ZwAee4eRXWP2cIo4SoCjBLfvIfja+SzFIpmh78OgVikkE1yheYgGI4xNwMcwYB2x4uTf6qWDpEv2sOD8GHAtcMP/Z14wamHqeZz+7MBPF4YKBkJzQuVfF4FguORXP+ozin/38ybzDtyFOJWE0e7t6znETxK/Esw6KYxzBDZELQkGgBIMIOUml8BRJA6TWxIrZfKI1++gArM9gqQUJkcBgO0c2EGpli+TiAyOz7TxSy3IA7/QqvAc4ARucz/9zcvw1BwaAp08LzJs1zNdGi+83YGY/CgJkjUCPzth7uJf1Pw+gjvnKrNIm1voBCxRaX7fa7BBLfgdzco0phCxJlJFO8wG6TKaYA5uBJAkWQKhR6Q2GBbrGsCASEL2DGSLxkuOdrLVf0OSKtbfZyo7tZ68RkZo3TLG8wZjei6RNs5NNRDKYYsC3OFxKHP2t5qnlDpNoQmaTTF0lQ1VvCRYt5+ipGbhBRLac4+xJO6jSvvNI4I9wBE6GcPAUIlbYl7aDJ1+fwjtw/g0u/giHAO/hH/+AKcfoCr58ARFjnIKjyGe0I0Zx9rNwIRUU7FyJQaY+cIgxA89+CtutSscgFfLIDGYkVktAhNQBkEhYIAGUUfiEOYPpncTCg95MhSyFRBiFFAmBBSTsGgtDQDKg+AZiFmqInSxtxJY8xHCq8PsowdtNrYuFJNTw34Sym8l0EFUTltosTNiFkEUYjgoH0nOKGFaKkJl2GAdBPmEgQmvG+zOsLlzg8GqCaDRRupygT0uOhUTh1SRkdEbmS64n/OgAPlvaBMgM3oErwDmC9/AU5AIXgbNmHqdsSSPYd4721axSJBew7wxed/fNMguYc4wk5iAXqLLWtglNscBNlDHYWvuacE1DhOYslD8YNUGM6VwuPNBBHBYoVTkXoqVKSDBdklgnYEJVrmoPepCwCMeKQBgvhZIvwjNCibYqu5BIr9+RcT5ileN4VQvn7FqRnxUiSwb7zvG+oSSWEYPkWmnTOW52sTTGyrdCpSxFaSWipqlNyARjIVGS6jzNE5SJu9ULO3oBYBCcG1pTJHAEjOb0cMix3M2TML8mIYaUExqSNMY58laP6mAuyYyEWojTN0YIut0Rn9TQctkb0P7a+B0yeo25nEg2CTGXK4+prmgXh0wbnFGQMoffRGFZOoU7R/BFr8UP34HrRliHhmegqHoKdou1jdB1tptEZoen6DvHnl1GCZFcEYMv8NtH2PcUyj58AcnBjeBXu1GEzEabeQe3kqNQ26hcYB2ibxiPspkN2qPR64tht+U8auSfg5dlOGhSYMfouZgmoZJBihMwZp+xYymmQsSQXoXi6BhclRqPwaUswgJcxYyYLHLi5JKBy5YSnCf37Ic6LL3TfqhC5UiFSuCMmRnlVikZoDTlLOVEPQrJNu19/lobxVQsOS75j3h0YH1uUPJlGploU5qVaJyWbdao/d/LYTAatzsvJ8OLi/GkEwzHvdNepz0OJqOLy2EnmAza419atn+NuB+TqX+D0BxT6Zel8VKc2PfS6wajcU5tKbivcn7siwXi2A+RWxbZR59EiYEXcmlvMWG1tnrKMOMsgX1nx2llUX0nofehFPrDFHblsR2wIF+Z3Q6kT3v9F8FwMOz1x60Pudfcfn/4k/GZXYVzKVPe484InWOu0oD8sKskWvY/IEcx90YpmmLIw/RyspMaSgj2A1nWFXAPwzp45oJL5bPYrXmAebdnwhV0znogUhyqtxAuEJ1j4ZnMc5syLmEY/OcyGI1Hk0578vyy3z0LWj6WoS9E7Cuyou5hyqVW9qz2Dy7Rm7RfHfS7iNmgYTC9JpzRBFO50aSDTPXnwbjdbY/bk6DfHVwoC7KdcdBv98fFiJ9giVS+8DGNUkaoFP9GKXGvMReE0dbx4dH37uGRe3hkFi9c8ri6ChuZ6XwBz5EgIURYIhILXRAvMIg7IXFiVS1huKRUhdYsSAMScALOo5sFQwk5sK0a+EjTKG/rFLTW9lJtesBFB7b1ut0bT8a982AyCjoX/e6odXxYI6RKZb0VZRycNXi1H2E0Evq1kVsFtTmWJsMKiaZqWydVGLWtrExcI6NUMTLz0lsxLDEXNUHcP+mfXaPb01v4gm2+GCd1uHb3vNefXI6CYb99Hihnqwysgb8I+uNJ5+LSOObqqRlw1PtvUMCphzUxu0F/3Bu/nYzejsbB+Qk4tREbahgvfxxNtClOOmcXl93B8OJVrxsMJ6+C4ah30T8B5x6Iugjn7dE4GBZzKj9uAO32R5PBMDjtvVnBr8Y2IGWqKD3VAQeXz896nd5A0ToBp/y4EfT0P91+GVY914GHwYveRX+SrW/paR0wc+sXw4vLwQphbbSOOBr9MjEivAzenoBTeV4DHl8M2y+CyWB4cdo7UxxqI3WELHr1uifgFL83AI0un486w95grOZYxqi9qKP/eW6o9pZ//j9rD3pUSBTHoP6XcvxxSQSR2Kv7h96t4lLE1YfdKqGocqDhYA2+h6NDk7FQKl0V5Ez2BPeuHn8zGVTkTNGtCY/6MBsSREm6jPNSezc+JJuSorWV2W8fNa//HV30/xin3z5uZ6RS3YOJ6vy4lazCkBxRofYV7kLKVJgLDjF1OY4xEhj0knIc6ZkWO5QHC9PEqsxmq5yCzeQN4thVhY3ai2DhhixJGNXiRoQndM7/LFG3cMs5rUub2Xdm22iOCP1jFv5t3HWEQ304Klkx3ZWirD29Lie+H7FQeAkJOVPK8EKW+Ji6S1WrLTk2f119BukvBeblgXy7prQ3IzEWrn4ZxuR4L2SU4lC6krkljB3YhjHJWGdSZ/hhTFyUyn9fE3zTWg0ZrYNltf87GQaDi5bzKBbTSWFroTiwhkHn1eRl8Lb1vPP98Y8//PjD8+8Pu//6KXjy5Kfuk38dH3WC50+Cn75rd58HR8fHP3VO1bbpnEVkdgd3bMlB6JNpATER0jL3OhGewjvEw0ULJdEP372HfGIpCq+Q2sdXJ8dxyjKdKrl9tZvVAkOCCLXhC/xqafuQGJstN0qlnzH2FGMvWqHrAcvae4ElnOd8QJC53spe4buaySo4FY8bYXcy2St8B676q2NtIaDkSyFx5M3TuRf5BXn1DCi6NigC82vMoVkz4Loch9caTqV6s1Tf1Oe2hUntIUrDnvfwwJcvT53BqtrLPEaXGOgTuLkLHXy7tN0QB14wz7IsXcnqgxt/wZLM1ZWPW3vmIPwqIhycAsxqHPWnhFphtAZ3ozRTeHvszRmbx1j7wpz5c3bkHR1533kxoctbV/uQJxH35p8yN0Ac3A7UGIF7+2kG25B1xZNZe6lohWvEiSqZhJWV1i8umqbuCx76cyIXy6kSdQWsxFgDnhLqz1kOpOk5hq56deIYNPNba+avW2Nfqb/9cuQGdE6oyu0iZYJIxu+89eBgrjIaoZVhwpip+tZ4Tx5apxzRcFGUdZCI1XXVDeNXMUOReAzok0iQkJhvdqY5kRDGjOLCXlYr4DeS9dGVcLGR1Z0CxbfSUka4Gi4bq5uWzai6wr72Tau4+VnBlVjch/3NdtxZ2Ksf+3IyX8jichWQUOZ+B4iX9nDWnt4bqaCjNk7tlyOFmaVl9dMEJX1kblnBm7Eqt890+daync+Ves73K7WgVy7hvDBmywilqffVtmrHPC07X9AEUTTHyhOryE6FsW2NLk9Pe2+C0SSvyApSW9BWWC+Dt6/al2djJWXLu0bLeCs/S/0pWEwMmVYxoRpw0H/VG170z4P+WBNrre4cOgqlHvUr2EDESX2yjfVjLo1GqI3ZVqMTHR/Ck0NYv034K1PK1XKKQxlbLy+fB53xWX7U0Tryjg69QyvbNbVaz6DLbqhyYr37MFhFWnQ+1/C/ws+tlm0Z/zRVzlkRJYRkHM1xllpQSoT2SUWUUyyxyEsOP///63UGOojrROLrROLnMrkMSvcZCiqfYybNImER/P/bjVDltNAMk2eFbxY/SgsVmtvl2n21Lp+KuO+pWH9KuJCgOxGAzOoI5mZf953hWyI9tfEuTmU7F/3T3ovLYVufcYyD84EKJVsBTtxSk4PESaqvIb/am+luI1mmVhBav1TSt5V4psJDfX6SgTN43fVsy7IqWxiObjwT+FXqDxmVKpgpe3u+WF4jisUN4sQdISoXiKPEX0nizlEcY37nTxdCv3Z1bjnGfvvlyGjeDY4Df4yTVO1o/ZpK1Ji5arbya6pNEJVD8opqLL016mxY1gUSIFiCzSUu46aLo7TKeaOJvZGBXe1Aaeo+2Yire6UGr7v39KLYVtGGUiOv5rCZ+npfima23pWSXfubZpIZsaz8eqH1wQQfV8dftWn5/VcaH6wi47wYtge/rHLcB9NwkDOF/DZ+zlG6CDKy5Sv5Mqn22VkwfLuZhrHBe6i0O+Peq2DS7Q2Dzvhi+La4aOl1N1JGS7XokmStXmgZEUxDLPbfHb6vcKmlx0wSQKEk1xgiwnGodpxq92lawYgyhhNwdhFPeaw20vr5PbRaYLe7p6Oage7BmJMEbBTNhG1umDGNgM2UbREK+TIqbyFSWYoi0mB8ParfgFgF2zmWj9p6WpNuPq1JPuHHMBr0J52znr6SCDrDYHwAlf6uvOlq87zvNZnaougpNa09fDG3hBj2ha9U8U/H9ysAH5quT+tLtlLW9vVa7WTKt4h7MEBc4HW95Hde6exWh4a8LUU/zDHFXOW0FCewFCqoD07fNEiriFd7fDRNnBiaM3OMbNYwxBRxwrIFKN/zDk7fTM4uOlkOEilVKvbS2W0DaHDeBJp3U9R6k8BZn7eziXPtTYlR0zJNTUZT0x2cvsl6kAiFE9jfyGEfjFpwsoLf38h1f9WEtyk4K/9od3d2jzVf+Ouc4RuZukokWeZGckua0tK6LuLzLZNdRbzd4iLse6vDbS9cCskSXa4MzKGtVzol8YRpHDwvqrUiSLd247b/5Vdrh0kURc4O+nvQBEwuKYxqN/HzN/v6FHZd/GqWLlGqvXiIoJWUXhGvSrQmU71IrO9CHiRDnmfNcvOyNDWyGzVjNh1l6bORB+miujWpasPQqwmw8ZgAnM2vHuQIprTMRRotZzNyqwTbSH6ThOUjiRJ6Zfghkl3hu1eqcOn2Rw1SlcnWJGo66wCncfQPGNGr84pgTeRrcpWOZyq9AbDvFSdcrcqbGoG1/oeGlojqlMyBZD6biIoBx5nAa5gFswoF3Sw5YCzOiIh3h++9kC2p3G+Vm1Kqkq66UModKTtQvk5G5BNulZCaxapOLJen3FDSqDojUflhC9VclhJ4bUGqDTz1hp4qbX3ykpNGUULopcBcd1K16ph1Fyv3eIDtfK4MfLW3MBJi4aXLaUzCl/hOa/gK33VV6duq9Y7swzPYnLL1EcbaCYOqsfVlEo0gMR8cqCI9+4pEcZFMX/sBSkmpCvfsXT8AuUeibacAO9dIu1U62aXAo2znMDBfHKDceh9Dde91juWCRbCh3qlJNTm7eB0Ms12dvd6XpTdu++9OlmmK+cn7ffU7Zjf694dSV++um65G9mu6yobvi5EkUrOWd6ZhsNVMxVi0krQQolFfdhgTTOWkdBFg3ytBE6WW0zTaIEapJFE7zepjhfOGlfeMyL1Iu1QZfTs3UwCtElmNe8PrnaS5wnf6OmCka8AhnpnbgV63Jt46/YeJmz2bwLcj3O+cgCln+1mo3I3XLuFsc0N+23yshaKZgCkKr/Q10sb6CIns3KS4kyK01PgsGXA8J/qbruxTa0J3r/Wcz/cDfVWSNh4XUhRDHW0lual7Z4ybqe5Y6HkbjyfXK+B7wuamAPmwePY3+3DTucZOXLNzmiaj3sV+Z2v9F/dn5E0LcfB3pupNHx8WX0nWDvGLDwb197jR+heIev5MLnQzTt4O7n3DjtFR+cwnO61rD88hv7PIju3aL0dg7kEeZ4ev2XgRLHTvH05jdqc7O4o7D2sP/p5Gtl/ePh/2unnDcOv48OhH9/CJe3jkLu6mnET1xuY80uUX7+ZTNX3VnE12imN2k3/Tv633CH3K8Irw6VIVn6q30+C6eTxz8xrNNdfwfP3YwHWFrtncrPAtcLcV1AVSnpvciIpNNW5JHHNI4xYpYyUfiXY81NpCbaczpW3S6KOZDTJVD2fqfeVYZiarbaTcf7TTeur/ZknDUjb3whmczGLNh8c6b52AUzXOnXjn7ai5C9SJFNfZRQpoVTNC7b0J1631CJ7DFX30rVJPff6y1ivf2tBDv+IZtPuXg8lFfxK86Y1bM6TycPHy0pT0wWmv39NH8k72cUYl3GbgxUF7y9b39bZl/V8AAAD///UcOixZRgAA'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
