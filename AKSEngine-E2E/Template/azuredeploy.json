{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
