{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
