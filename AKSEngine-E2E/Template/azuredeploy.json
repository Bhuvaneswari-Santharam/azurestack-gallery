{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
