{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
