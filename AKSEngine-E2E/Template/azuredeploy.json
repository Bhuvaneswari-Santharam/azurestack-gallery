{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8R8e3fbNrL4//wU86N5VvH+Qsp22m7rVNmrSHSqG1vWSnIem+YoEAlJqEmAASDbyuO73wOApEiKkuW2aXNOUxHEPDCYBwYzzMH/g+aU0OYUiYUlsAQXW5Z1cHAA1gEA/CyWcYz46pl+Un/O2VwAW8pkKWG6goTjBNOQ0DmESGJANISIzSHCNzgCuUrwI59zxh/DLeKU0PljIHTGgHG4wXzKBD70DKVmidTPCeIoBopi3LKP7WfjVYJBMoXbg0evUERCuEHREgtAHJ+Ci2HGOGBDy73VTzlJl+hnRfkx4EjgnPjPTU2ohqjnefazS7NQHCwYCMkJnXtlCI7lklPxrM8o/rmZPZl3+C7AiSSMpm/XzxlsjPi1eNZBUYRDuCVyQSgIFGMQASeJFJ5CaSapPbEiNp9oyT46BOszWGpDAiQw2M6xDYRa6Sa5+NDwbDuP1LYcwju9C+8BTsEG5/P/nJ58zSYDwNOnOeTtBuRrI8X3WyDTHzkCsoGgR2fsPdxL+p+HUIV8ZXZpG2n9gAUKrK87dXaIJV/BnNxgCgGLY6Wk02yALuMp5sBmIEmMBRBqRHqLYYFuMCyIBERXMEMkWnK8l7b2c5xckfa2a9mJ/ew1IlLThimWtxjTe4G0anbShUgGUwz4DgdLicO/VT0130EcTshskoqroKjqLcGi5Rw/NQO3iMiWc5I+aQNV0nceCfwRjsFJAQ6fQshy/dJ68OTrU3gHzr/BxR/hCOA9/OMfMOUYXcOXLyAijBNwFPoUd8goTn/mJqScgp0J0U/FBw4xauDZT2G3VmkfpFwemcGMRGoLiJDaARIJCySAMgqfMGcwXUksPOjNlMtSQIRRSJAQWEDMbrAwCCQDim8hYoGesZemjdiSBxjOFHwfxXi3qnWxkIQa+ttA9lOZDqJqwVKrhXG7ELAQw3FuQHpNIcNKEDKVDuMgyCcMRGjJeH+G1gULHFxPEA0nSpYT9GnJsZAouJ4EjM7IfMn1gh8dwmdLqwCZwTtwBTjH8B6eglzg3HFW1OOMLWkIDee4oVaVILmAhjN43W2YbRYw5xhJzEEuUGmvbeOaIoHrMGOwtfQ14oqECM1IKHswYoII07lceKCdOCxQomIuhEsVkGC6JJEOwISqWNUe9CBmIY4UgiBaCsVfiGeEEq1Vds6R3r9jY3zEKvrxshQu2I1CP8tZlgwazknDYBLLkEF8o6TpnNSbWBJhZVuBEpbCtGZR49QqZJyxkChOdJzmMUrZ3WmFHb0BMPAvDK4pEjgERjN8OOBY7mdJmN+QAEPCCQ1IEuEMeKdFdTCXZEYCzcTZG8ME3W2ITypgGe81YH+t/w4YvcFcTiSbBJjLtcWUd7SLA6YVzghIqcNvItcsHcKdY/ii9+KH78B1Q6xdwzNQWD01d4e2jdBNeppE5oSn8Dsnnl0ECZBcI4Mv8NtHaHgKpAFfQHJwQ/jVrmUh1dF62v6d5CjQOioXWLvoW8bDdGWD9mj0+nLYbTmPauln04s8HNYJsGPknC+TUMkgwTEYtU/JsQRTISJIrgNxfAKuCo0n4FIWYgGuIkZMFDl1Ms7AZUsJzpN7zkMdlqy0HSpXOVKuEjhjZkWZVkoGKEk4SzhRj0KybWefv1ZHMRVLjgv2Ix4dWp9rhHyVhMbbFFYlapdlmz1q//dq6I/G7c7LyfDycjzp+MNx76zXaY/9yejyatjxJ4P2+JeW3bxBvBmRafMWoTmmslnkxktwbN+Lr+uPxhm2peBNFfOjplggjpsBcossN9EnUSDgBVzaO1RY7a1eMsw4i6Hh7Lms1KvvxXQDCq4/SGBfGrsn5uhLq9sD9Vmv/8IfDoa9/rj1IbOau++PfjI2sy9zLmXKetwZoXPMVRiQH/blRPP+B/jI117LRZ0PeZhcTvcSQwHAfiDJqgDuIVidnprgUtksdisWYN4dGHcFnfMeiAQH6i0EC0TnWHgm8twljEsY+v+58kfj0aTTnjy/6nfP/VYTy6ApRNRUaEXVwpRJrfVZnR9cog9pvzrodyGzQc/B9IZwRmNM5VaV9lPRX/jjdrc9bk/8fndwqTTIdsZ+v90f5yPNGEuk4kUT0zBhhErxb5QQ9wZzQRhtnRwdf+8eHbtHx2bzgiWPyruwlZiOF/AcCRJAiCUikdAJ8QKDWAmJY6usCcMlpcq1pk4akIBTcB7dLhiKyaFtVaaPNI7isU7N1tJeqkMPuOjQtl63e+PJuHfhT0Z+57LfHbVOjiqIVKqsj6KMg7MxX51HGA2Ffm34Vk5tjqWJsEKiqTrWSeVGbStNEzfQKFGMzLr0UQxLzEWFEfdP+mNX8Pb0ET4nm23GaXVeu3vR60+uRv6w377wlbGVBjamv/D740nn8soY5vqpfuKo918/n6ceNtjs+v1xb/x2Mno7GvsXp+BURmyoQLz8cTTRqjjpnF9edQfDy1e9rj+cvPKHo95l/xSce2ZUWbhoj8b+MF9T8XHL1G5/NBkM/bPem/X89dgWoFQUhafqxMHV8/NepzdQuE7BKT5unXr2n26/OFc9VycP/Re9y/4k3d/C0+bE1KxfDC+vBmuAjdEq4Gj0y8Sw8NJ/ewpO6Xlj8vhy2H7hTwbDy7PeuaJQGakCpN6r1z0FJ/+9ZdLo6vmoM+wNxmqNRYjKiyr4n2eG6mz55/+xDqBHhURRBOq/hOOPSyKIxF7VPvRpFRc8rr7sVgFFpQM1F2vwPRwfmYiFEukqJ2eiJ7irqv9NeVCeM0F3xj3qy2yIESXJMspS7f3okHRJCtdOYr991LT+d3TZ/2OUfvu4m5AKdQ9GquPjTrQKQnJEhTpXuAspE2EKHGLqchxhJDDoLeU41CvNTygPZqaOVJHMTj4Fm8lbxLGrEht1FsHCDVgcM6rZDQmP6Zz/WazuoJZR2uQ21e9Ut9EcEfrHNPzbmOsIB/pyVLJ8uWtBWQd6X06bzZAFwotJwJkShhewuImpu1S52pJj87er7yCbS4F5cSA7rinpzUiEhatfBhE5OQgYpTiQrmRuAWIPskFEUtIp1yl8EBEXJfLfNwTfttZDRupgWe3/Tob+4LLlPIrEdJLrWiAOraHfeTV56b9tPe98f/LjDz/+8Pz7o+6/fvKfPPmp++RfJ8cd//kT/6fv2t3n/vHJyU+dM3VsumAhma1gxZYchL6ZFhARIS1T1wnxFN4hHixaKA5/+O49ZAtLUHCN1Dm+vDiOE5bKVPHdVKdZzTDEiFAbvsCvltYPibE5cqNENlPCniLshWtwPWBZBy+whIuMDggy10fZa7yqqKyap/xx7dy9VPYar8BVf2tfmzMo+VJIHHrzZO6FzRy9egYU3hgQgfkN5lAvGXBdjoMbPU+FerNV39TmdrlJbSFKwp73cMeXbU+VwDrbSy1GpxjoE7iZCR1+u7Bd4wdeMM+yLJ3J6oub5oLFqakrG7cOzEX4dUg4OPk0q3a0OSXUCsKNebdKMrm1R96csXmEtS3MWXPOjr3jY+87LyJ0eedqG/Ik4t78U2oGiIPbgQohcO8+zWAXsM54Um0vJK1wgzhRKZOw0tT6xWXd0puCB805kYvlVLG6nqzY2Jg8JbQ5Z9kkjc8xeE8dA3LqaIn8dXvbVGJvvxy5Pp0TqmK6SJggkvGVt+kUTAmjdrZSSBgzldcaq8lc6pQjGizydA5isS5T3TJ+HTEUiseAPokYCYn5diOaEwlBxCjO9WQt+WYt2ia6Fi42vLpToPhOWkr51sNFJXWTovqUd7apbdLKKz7reQUS90F/s5N26u6q172czBcyL6oCEkrNV4B44exmHegzkXI26sDUfjlSkGk4Vj+NM9JX5ZblvxmrNPtcp20t2/lcyuOazVIO6BVTNy+I2DJESeJ9ta3K9U7LzjY0RhTNsbLAMrBTImxbo6uzs94bfzTJMrEc1Q6wNdRL/+2r9tX5WHHZ8m7QMtpJz1J/5SQmBk0rX1Blst9/1Rte9i/8/lgja61rDR0FUvX2JWgg4rS62Nq8MeNGA1TGbKvWiE6O4MkRbFYR/spQcr2c4kBG1sur535nfJ5dcbSOveMj78hKT0ut1jPosluqjFifOgxUHg6dzxX4r/Bzq2Vbxj5NdnOeewkhGUdznIYUlBChbVIh5RRLLLJUo5n9/2aTgHbeOoA0dQBpZjy5DAp1DDUrW2PKzSJmIfz/u62ziuGgfk4WFb6Z/yhsVGCqypU6tU6bcr/vKV9/RriQoDsQgMyqAKair/vN8B2Rnjpw57exncv+We/F1bCt7zbG/sVAuZKdE07dQnODxHGiy49f7e14d6EsYssRbRaTdJUSz5R7qK5PMnAGr7uebVlW6ejC0a1nHL8K+QGjUjkzpW/PF8sbRLG4RZy4I0TlAnEUN9ecuHMURZivmtOF0K9dHVtOcLP9cmQk7/onfnOM40SdZJsVkagxU2K2svLUthmly/GSaCx9JOps2dYFEiBYjE3xlnHTvVHY5azBxN5KwC53ntR1nWyF1T1Sg9fde3pQbCtvP6mgV2vYjn2zH0UT2+xGScv9polkRiwrKyu0Phjn42r/qw4tv7+U8cHKI86LYXvwyzrGfTCNBhlRyKrwc46ShZ+iLZbii6ja5+f+8O12HEYH78HS7ox7r/xJtzf0O+PL4du8wNLrbsWMlmrTJUlbvNAyJJgGWDTeHb0vUamEx5QTQIEkNxhCwnGgTpzq9GlawIhShlNw9mFPWaxW0uq9PbRaYLe7Z6OKgh7AmJMYbBTOhG0qy5iGwGZKtwiFbBuVtRCpNEUhqVG+HtVvQKyd7RzLR229rEk3W9YkW/BjGA36k855T5ci/M7QHx9Cqa8ra7bavu57VaayKXpJdXsPX0x1EENDNJUo/uk0m6UJH+rKptUtWwtr936tTzLF6uEBDBAXeFMuWa0rmd1p15C1o+iHOaaYq5iW4BiWQjn1wdmbGm4V8nJvj8aJY4NzZq6PzR4GmCJOWLoBxfru4OzN5Pyyk8YgkVAlYi+Z3dVM9S/qpmZdFJWeJHA21+1so1x5UyBUt01TE9HUcgdnb9LeI0LhFBpbKTTAiAXH6/mNrVQb6+a7bc5Z2Ue7u7d5bNjCX2cM30jVVSBJIzeSO8KU5tZ1EZ/vWOza4+3nF6HhrS+1vWApJIt1ujIwl7Ve4XbEE6Zh8CLP1nIn3dqPWuPLr9Yei8iTnD3k96AFmFiSK9V+7GdvGvr2dZP9cpQuYKq8eAijpZBeYq+MtMJTNUmsnkIexEMWZ8128yI3FbRbJWMOHUXu05EHyaJ8NClLw+CrMLD1mgCc7a8eZAgmtcxYGi1nM3KnGNuKfhuHxSuJAnhp+CGcXePVK5W4dPujGq6KaCsc1d11gFM7+geU6NVFibE69BW+CtczpZ4AaHj5DVer9KaCYKPvoaYVorwkcyGZrSakYsBxyvAGZE6shEE3SQ4Yi1Ik4t3Rey9gSyobrWIzSpnTdfdJsRNlD8w38Yh8wq0CUD1b5YVl/BQbSWpFZzgqPuzAmvFSmF7ZkHLjTrWRp4xb37xkqFEYE3olMNcdVK0qZNXEir0dYDufSwNf7R2EhFh4yXIakeAlXmkJX+NVV6W+rUrPSAOewfaQra8wNm4YVI6ti0g0hNh8aKCS9PTrEUVFMl3uA5SQQhbu2ft++HEPR7tuAfbOkfbLdNKiwKP05DAwXxqgTHsfQ/nsdYHlgoWwJd+pcDU5v3ztD9NTnb3Zj6UPbo13p8skwfz0fUP9jtit/v2h0M2776GrlvyGrNLh+3wkCdWq5co0CrbqsRiNVpzmTNTKyw4igqmcFAoB9r0c1GFqOXWjNWwUUhJ10iw/lihv2XnPsNwLtUkVwXdTMwnQOpBVqNe83ouba7zS5YCRzgGHeGaqA71uhb1N/A9jN302jm/Peb9zASad7aeucj9a+7iz7Y34bfORFgpnAqYouNZlpK35ERLpvUlekyK00PAsGXA8J/pbrvQTa0L3z/Wcz/dP+qo4rb0upCiCKtiac5P3zhg3S90z0fO2Xk9uZsD3uM1tDvJh/uxvtuG6e429qKb3NHVKvY/+zjb6Lu6PyNs24vDvDNXbPjrMv46sXOLnHwrq73DDzS8P9fqZXOgmnKwN3PuGnaKj4p1PelvXHl5AVrNIr+3aL0dg6iCP08vXdDx3FrrnDycRW+mOjrzmYR3A39PA9svb58NeN2sUbp0cHf/oHj1xj47dxWrKSVhtaM48XVZ4N5+o6VJzutgpjtht9i3/rp4j9CmFy92nS5V/KlenwXUzf+ZmOZpryvB889rAdYXO2dw08c1hdyXUOVAWm9yQim05boEdc0nj5iFjzR8J97zU2oFtrzulXdzoq5ktPJUvZ6r95FimKqt1pNh3tNd+6n+rpGYr63vgDEyqseaDYx23TsEpK+detLM21MwEqkjycnYeAlrliFB5b9x1a9ODWwfpxLyBvlVops+wVJrkW1ua59dE/Xb/ajC57E/8N71xa4ZUIM5fXpmc3j/r9Xv6Tt5Jv8oo+dt0en7T3rJ1wT7vPgjv6wMqtAylMDG6xjBlTArJUVIcTP/VBOwGLFnpfh53gVGIuQCJhXSFXEW4FiDU/zoNpgHBokRGRQVXuT+RlWtxoSEK3peLs261OFuYOiUU8VX5OJPOt9vVabqwOlMoPOgg2pDAlxT8Ex/GWMiNiqr1fwEAAP//q5s8F59HAAA='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
