{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
