{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
