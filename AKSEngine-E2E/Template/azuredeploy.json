{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
