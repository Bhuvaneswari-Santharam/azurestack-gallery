{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
