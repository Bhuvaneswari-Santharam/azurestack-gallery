{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
