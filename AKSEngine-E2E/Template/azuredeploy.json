{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
