{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
