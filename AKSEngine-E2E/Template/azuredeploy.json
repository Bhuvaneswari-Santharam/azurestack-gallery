{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8R8e3fbNrL4//wU86N5VvH+Qsp22m7rVNmrSHSqG1vWSnIem+YoEAlJqEmABSDbyuO73wOApEiKkuW2SXNOXZOYFwbzwABDH/w/aE4JbU6RWFgCS3CxZVkHBwdgHQDAz2IZx4ivnukn9e+czQWwpUyWEqYrSDhOMA0JnUOIJAZEQ4jYHCJ8gyOQqwQ/8jln/DHcIk4JnT8GQmcMGIcbzKdM4EPPcGqWWP2cII5ioCjGLfvYfjZeJRgkU7Q9ePQKRSSEGxQtsQDE8Sm4GGaMAza83Fv9lLN0iX5WnB8DjgTOmf/c1IxqmHqeZz+7NBPFwYKBkJzQuVfG4FguORXP+ozin5vZkxnDdwFOJGE0HV0/Z7gx4tfiWQdFEQ7hlsgFoSBQjEEEnCRSeIqkAVJrYkVsPtGafXQI1iew1IIESGCwnWMbCLXSRXLxoZHZdh6pZTmEd3oV3gOcgg3Op/85PfmSAQPA06c55u0G5mujxfdbMNNfcgJkg0CPzth7uJf1Pw+hivnKrNI21voBCxRYX3ba7BBLvoI5ucEUAhbHykin2Qu6jKeYA5uBJDEWQKhR6S2GBbrBsCASEF3BDJFoyfFe1trPaXLF2ttuZSf2s9eISM0bpljeYkzvRdKm2UknIhlMMeA7HCwlDv9W89RyB3E4IbNJqq6CoapRgkXLOX5qXtwiIlvOSfqkHVRp33kk8O9wDE6KcPgUQpbbl7aDJ1+ewjtw/g0u/h2OAN7DP/4BU47RNXz+DCLCOAFHkU9ph4zi9NfchVRQsDMl+qn6wCHGDDz7Key2Kh2DVMgjM5iRSC0BEVIHQCJhgQRQRuEj5gymK4mFB72ZClkKiTAKCRICC4jZDRaGgGRA8S1ELNAQe1naiC15gOFM4fdRjHebWhcLSajhvw1lP5PpIKomLLVZmLALAQsxHOcOpOcUMqwUIVPtMA6CfMRAhNaM91dYXbDAwfUE0XCidDlBH5ccC4mC60nA6IzMl1xP+NEhfLK0CZAZvANXgHMM7+EpyAXOA2fFPM7YkobQcI4balYJkgtoOIPX3YZZZgFzjpHEHOQCldbaNqEpEriOMgZba18TrmiI0IyF8gejJogwncuFBzqIwwIlKudCuFQJCaZLEukETKjKVe1BD2IW4kgRCKKlUPKFeEYo0VZl5xLp9Ts2zkesYhwva+GC3Sjys1xkyaDhnDQMJbEMGcQ3SpvOSb2LJRFWvhUoZSlKaxE1TW1CJhgLieJE52keo1TcnV7Y0QsAA//C0JoigUNgNKOHA47lfp6E+Q0JMCSc0IAkEc6Qd3pUB3NJZiTQQpy9MULQ3Y74pIKWyV6D9m3jd8DoDeZyItkkwFyuPaa8ol0cMG1wRkHKHH4TuWXpFO4cw2e9Fj98B64bYh0anoGi6inYHdY2QjfpbhKZHZ6i75x4dhElQHJNDD7Db79Dw1MoDfgMkoMbwq92rQipjdbz9u8kR4G2UbnAOkTfMh6mMxu0R6PXl8Nuy3lUyz8DL8pwWKfAjtFzPk1CJYMEx2DMPmXHEkyFiCC5DsTxCbgqNZ6AS1mIBbiKGTFZ5NTJJAOXLSU4T+7ZD3VYstJ+qELlSIVK4IyZGWVWKRmgJOEs4UQ9Csm27X2+rY1iKpYcF/xHPDq0PtUo+SoJTbQpzErUTss2a9T+79XQH43bnZeT4eXleNLxh+PeWa/THvuT0eXVsONPBu3xLy27eYN4MyLT5i1Cc0xlsyiNl+DYvpde1x+NM2pLwZsq50dNsUAcNwPkFkVuoo+iwMALuLR3mLBaWz1lmHEWQ8PZc1ppVN9L6AYUQn+QwL48dgPm5Euz24P0Wa//wh8Ohr3+uPUh85q7749+Mj6zr3AuZcp73Bmhc8xVGpAf9pVEy/4n5MjnXitFXQx5mF5O91JDAcF+IMuqAu5hWAVPXXCpfBa7FQ8wYwcmXEHnvAciwYEahWCB6BwLz2Seu4RxCUP/P1f+aDyadNqT51f97rnfamIZNIWImoqsqHqYcqm1Pav9g0v0Ju1XB/0hYjZoGExvCGc0xlRuNWk/Vf2FP2532+P2xO93B5fKgmxn7Pfb/XH+phljiVS+aGIaJoxQKf6NEuLeYC4Io62To+Pv3aNj9+jYLF6w5FF5FbYy0/kCniNBAgixRCQSuiBeYBArIXFslS1huKRUhdY0SAMScArOo9sFQzE5tK0K+EjTKG7rFLTW9lJtesBFh7b1ut0bT8a9C38y8juX/e6odXJUIaRKZb0VZRycDXi1H2E0FHrYyK2C2hxLk2GFRFO1rZMqjNpWWiZukFGqGJl56a0YlpiLiiDuX/TPrtDt6S18zjZbjNMqXLt70etPrkb+sN++8JWzlV5sgL/w++NJ5/LKOOb6qR5w1Puvn8Ophw0xu35/3Bu/nYzejsb+xSk4lTc2VDBe/jiaaFOcdM4vr7qD4eWrXtcfTl75w1Hvsn8Kzj0QVREu2qOxP8znVHzcAtrtjyaDoX/We7OGX7/bgpSqovBUBRxcPT/vdXoDResUnOLjVtCz/3T7RVj1XAUe+i96l/1Jur6Fp03A1K1fDC+vBmuEjbdVxNHol4kR4aX/9hSc0vMG8Phy2H7hTwbDy7PeueJQeVNFSKNXr3sKTv77FqDR1fNRZ9gbjNUcixiVgSr6X+eGam/51/+zDqBHhURRBOq/hOPfl0QQib2qf+jdKi5EXH3YrRKKKgdqDtbgezg+MhkLJdJVQc5kT3BX1fibyqAiZ4LuTHjUh9kQI0qSZZSV2vvxIemUFK2dzH77XfP639Fl/89x+u333YxUqnswUZ0fd5JVGJIjKtS+wl1ImQhzwSGmLscRRgKDXlKOQz3TfIfyYGHqWBXZ7JRTsJm8RRy7qrBRexEs3IDFMaNa3JDwmM75XyXqDm4Zp01pU/tObRvNEaF/zsK/jruOcKAPRyXLp7tWlHWg1+W02QxZILyYBJwpZXgBi5uYuktVqy05Nj9dfQbZXArMiy+y7ZrS3oxEWLh6MIjIyUHAKMWBdCVzCxh7sA0ikrJOpU7xg4i4KJH/viH4trV+ZbQOltX+72ToDy5bzqNITCe5rQXi0Br6nVeTl/7b1vPO9yc//vDjD8+/P+r+6yf/yZOfuk/+dXLc8Z8/8X/6rt197h+fnPzUOVPbpgsWktkKVmzJQeiTaQEREdIy9zohnsI7xINFC8XhD9+9h2xiCQqukdrHlyfHccJSnSq5m2o3qwWGGBFqw2f41dL2ITE2W26UyGbK2FOMvXCNrl9Y1sELLOEi4wOCzPVW9hqvKiar4FQ8roXdy2Sv8Qpc9VPH2lxAyZdC4tCbJ3MvbObk1TOg8MagCMxvMId6zYDrchzcaDiV6s1SfVWf2xUmtYcoDXvewwNftjxVButqL/UYXWKgj+BmLnT49dJ2TRx4wTzLsnQlqw9umgsWp66ufNw6MAfh1yHh4ORgVu3b5pRQKwg34G6VZnJvj7w5Y/MIa1+Ys+acHXvHx953XkTo8s7VPuRJxL35x9QNEAe3AxVG4N59nMEuZCtbmXyy8yCAGF2noRZGqSsUKlq4QZyoekpYad394rJWL/moEqo6qnsP5iwD0gQcQ+jUMSgK5NTROvp2q91UC9F+OXJ9OidUZXmRMEEk4ytvM0yYS41aaGWiMGaq0jV+lAXZKUc0WOQFHsRifXF1y/h1xFAoHgP6KGIkJObb3WpOJAQRozi3nDmRi+VUm00t2Sa6Fi42srpToPhOWsoc16+LZusmRYMSPCjS115q5XdAa7gCi/uwv6ETK5tem3spEJmhryQKpLG4ehbNyXwh8xtfQEK52QoQL2wsrQO9YVORUO3m2i9HCjPdK6hfTaTU5/iW5b8Z+8N++1zXlC3b+VQqMpvNUoHqFetKL4jYMkRJ4n2xrcrZU8vObCtGFM2xigBlZKfE2LZGV2dnvTf+aJKViTmpHWhrrJf+21ftq/OxkrLl3aBltJOfpX7kLCaGTCufUAXY77/qDS/7F35/rIm11hchHYVSTUUlbCDitDrZ2qI2k0YjVN7ZVq0/nxzBkyPYvOL4li5yvZziQEbWy6vnfmd8np2/tI694yPvyEq3cq3WM+iyW6riid4SGaw8VzufKvhf4OdWy059z5Re53nAEpJxNMdpvkMJETo8KKKcYolFVgc1s//fbDLQuURnt6bObs1MJpdB4ZJFQWVzTKVZxCyE/3+3FaqYnephsgT11eJHzULNWYTo3A1xUtRqplKObj0TaVWeDRiVymXNTkLhNUOcNE1qyYoGTyzgM4iFVZeOv0EaLk4yMPf6lU4BXbjmedZTufWMcCFB94AAmVURTE+F7vjDd0R6quTJz8M7l/2z3ourYVufLo39i4GKlzsBTt1Ce4nEcaIvgL/Y2+nuIlmklhPavM7T98R4pmJgdX6SgTN43fVsy7JKm8fty/98sbxBFItbxIk7QlQuEEdxcy2JO0dRhPmqOV0IPezqXH6Cm+2XI6N51z/xm2McJ6qWaFZUot6ZS34ruyDcBlG6niipxlK+BJ0ty7pAAgSLsbk+Z9z0zxRWOWvxsbcysMu9P3V9P1txdZfa4HX3ni4g28obgCrk1Ry2U9/sCNLMNvuB0oYL08YzI5aVXey0PpgI6+okozaJf/wy6YOVp9UXw/bgl3Ui/2BaPTKmkPVBzDlKFn5KttgMUSTVPj/3h2+30zA2eA+Vdmfce+VPur2h3xlfDt/mV1y97lbKaKkWXZK0yQ4tQ4JpgEXj3dH7EpfKHiCVBFAgyQ2GkHAcqB2+2u2bJjyijOEUnH3EUx6rjbR6cwKtFtjt7tmoYqAHMOYkBhuFM2Gbu31MQ2AzZVuEQraMyluIVJaiiNQYX4/qERDrYDvH8lFbT2vSzaY1ySb8GEaD/qRz3tOXQX5n6I8PodRZl7W7bZ/3vSZTWRQ9pbq1V/kJh+BiaIimUsU/nWazBPCh7uK6umRrZe1er/V2rXh/ewADxAXe1Et225jM7nRoyBqC9MMcU8xVTktwDEuhgvrg7E2NtIp4ubtK08SxoTkzB/hmDQNMEScsXYDiDfvg7M3k/LKT5iCRUKViL5nd1YD6F3WgWR9LpSsMnM15O9s4V0YKjOqWaWoympru4OxN2v1FKJxCYyuHBhi14HgN39jKtbFuf9wWnJV/tLt7u8eGL3w7Z/hKpq4SSZq5kdyRprS0rov4fMdk1xFvv7gIDW99reAFSyFZrGuygTku9wpHUJ4wLZsXeUmaB+nWftwan3+19phEXsntob8HTcDkktyo9hM/G2no8+9N8ctZukCpMvAQQUspvSRemWhFpmolXN2FPEiGLM+a5eZFaSpkt2rGbDqK0qdvHqSL8takrA1DryLA1rMQcLYPPcgRTP2ciTRazmbkTgm2lfw2CYvnLgX00uuHSHaNV69U4dLtj2qkKpKtSFR3oANO7ds/YUSvLkqC1ZGvyFU4gyp1ZUDDy4/xWqWRCoGNzpOaZpTylEyVns0mpGLAcSrwBmbOrERBt6kOGItSIuLd0XsvYEsqG61iO1BZ0nX/T7EXaA/KN/GIfMStAlK9WOWJZfIUW3lqVWckKj7soJrJUgCvLEi5daraSlWmrY+XMtIojAm9EpjrHrZWFbPqYsXuGrCdT6UXX+wdjIRYeMlyGpHgJV5pDV/jVVeVvq1K104DnsH2lK2PMDZOGFSNra/xaAix+dRDFenp9zuKi2T6whVQQgpVuGfv++nNPRLtOgXYu0bar9JJL2EepTuHgfnWA2XW+xjKe68LLBcshC31TkWqyfnla3+Y7urszY44vXFrvDtdJgnmp+8b6veI3erfPxT6qffddNWy39BV+vq+GElCNWu5Mq2arXoqxqKVpLkQtfqyg4hgKieF2w77XgnqKLWcurc1YhRKErXTLD+WOG9Zec+I3Au1SxXRd3MzBdA6kVW41wzvJc01Xuk7j5GuAYd4Zq5Aet2KeJv0HyZu+mwC355wf3ACppztp6FyP177hLPtn0K0zWdyKJwJmKLgWt+Vba2PkEjPTfKLN0ILLeeSAcdzor+mSz9yJ3T/Ws/5dD/QFyVp7XEhRRFU0daSm7p3xriZ6p6Fnrf1eHKzAr4nbG4LkA+LZ3+zD9eda+zFNT2nqTPqfex3ttH5cn9G3rYQh39nqt722Wf+fWrlED//VFN/CR1ufvup58/kQrdBZY343lfs1R0Vz3zS07r28AKyO4v02K79cgTmHuRxeviavs+Dhe66xEnEVrptJr/zsA7g72kh/OXt82Gvm7Vqt06Ojn90j564R8fuYjXlJKy2lGeRLusuMB8J6vv0dLJTHLHb7K8p7Or6Qh9TvDx8ulTFp/IVPLhuFs/crEZzTa8B3zw2cF2hazY3LXxz3F0FdY6U5SY3pGJbjVsQxxzSuHnKWMtHwj0PtXZQ2+tMaZc0+mhmi0zlw5lqRz+WqclqGyk2d+21nvqvxdQsZX0XosFJLdZ88q3z1ik4ZePci3fWCJy5QJVIfoWdp4BWOSNUxk24bm1G8Awu/4Khtf6YIRurfKTQ2vLxwpql3+5fDSaX/Yn/pjduzZBKw/nglano/bNev6dP5J30q5hStE3B82P74oGDVW4trG26KvRnWZbu9JsyJoXkKEmf0z9Vgd1Q/4UfTAOCRQarQrqrYpfI7lqx+TtChbav9+XrVbd6vVoAnRKK+Kq8IUnh7XYVTF+NzhQJDzqINiTwJQX/xIcxFnLjTjRtjWTLYFFg6fonvifvZDqsZyWxkO665wSe1cJb1v8FAAD//zkVrig0SQAA'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
