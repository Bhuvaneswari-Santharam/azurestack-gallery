{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
