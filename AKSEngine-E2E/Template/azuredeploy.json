{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
