{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
