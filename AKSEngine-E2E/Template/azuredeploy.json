{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"','AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"','AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"','AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"','AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"','AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
