{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
