{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
