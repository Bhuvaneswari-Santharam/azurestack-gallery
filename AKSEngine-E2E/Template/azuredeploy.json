{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
