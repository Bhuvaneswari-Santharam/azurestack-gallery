{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8R8e3fbNrL4//wU86N5VvH+Qsp22m7rVNmrSHSqG1vWSnIem+YoEAlJqEmABSDbyuO73wOApEiKkuW2SXNOXZPAPDEPDDD0wf+D5pTQ5hSJhSWwBBdblnVwcADWAQD8LJZxjPjqmX5S/87ZXABbymQpYbqChOME05DQOYRIYkA0hIjNIcI3OAK5SvAjn3PGH8Mt4pTQ+WMgdMaAcbjBfMoEPvQMpWaJ1M8J4igGimLcso/tZ+NVgkEyhduDR69QREK4QdESC0Acn4KLYcY4YEPLvdVPOUmX6GdF+THgSOCc+M9NTaiGqOd59rNLIygOFgyE5ITOvTIEx3LJqXjWZxT/3MyezBi+C3AiCaPp6Po5g40RvxbPOiiKcAi3RC4IBYFiDCLgJJHCUyjNJLUmVsTmE63ZR4dgfQJLLUiABAbbObaBUCtdJBcfGp5t55FalkN4p1fhPcAp2OB8+p/Tky/ZZAB4+jSHvN2AfG20+H4LZPpLjoBsIOjRGXsP95L+5yFUIV+ZVdpGWj9ggQLry06bHWLJVzAnN5hCwOJYGek0e0GX8RRzYDOQJMYCCDUqvcWwQDcYFkQCoiuYIRItOd7LWvs5Tq5Ie9ut7MR+9hoRqWnDFMtbjOm9QNo0O6kgksEUA77DwVLi8G81T813EIcTMpuk6ioYqholWLSc46fmxS0isuWcpE/aQZX2nUcC/w7H4KQAh08hZLl9aTt48uUpvAPn3+Di3+EI4D384x8w5Rhdw+fPICKME3AU+hR3yChOf81dSAUFO1Oin6oPHGLMwLOfwm6r0jFIhTwygxmJ1BIQIXUAJBIWSABlFD5izmC6klh40JupkKWACKOQICGwgJjdYGEQSAYU30LEAj1jL0sbsSUPMJwp+D6K8W5T62IhCTX0t4HsZzIdRJXAUpuFCbsQsBDDce5AWqaQYaUImWqHcRDkIwYitGa8v8LqggUOrieIhhOlywn6uORYSBRcTwJGZ2S+5FrgR4fwydImQGbwDlwBzjG8h6cgFzgPnBXzOGNLGkLDOW4oqRIkF9BwBq+7DbPMAuYcI4k5yAUqrbVtQlMkcB1mDLbWvkZc0RChGQnlD0ZNEGE6lwsPdBCHBUpUzoVwqRISTJck0gmYUJWr2oMexCzEkUIQREuh+AvxjFCircrOOdLrd2ycj1jFOF7WwgW7UehnOcuSQcM5aRhMYhkyiG+UNp2TehdLIqx8K1DKUpjWLGqc2oRMMBYSxYnO0zxGKbs7vbCjFwAG/oXBNUUCh8Bohg8HHMv9PAnzGxJgSDihAUkinAHv9KgO5pLMSKCZOHtjmKC7HfFJBSzjvQbs28bvgNEbzOVEskmAuVx7THlFuzhg2uCMgpQ5/CZyy9Ip3DmGz3otfvgOXDfEOjQ8A4XVU3N3WNsI3aS7SWR2eAq/c+LZRZAAyTUy+Ay//Q4NT4E04DNIDm4Iv9q1LKQ2Wk/bv5McBdpG5QLrEH3LeJhKNmiPRq8vh92W86iWfja9yMNhnQI7Rs+5mIRKBgmOwZh9So4lmAoRQXIdiOMTcFVqPAGXshALcBUxYrLIqZNxBi5bSnCe3LMf6rBkpf1QhcqRCpXAGTMSZVYpGaAk4SzhRD0Kybbtfb6tjWIqlhwX/Ec8OrQ+1Sj5KglNtClIJWrFss0atf97NfRH43bn5WR4eTmedPzhuHfW67TH/mR0eTXs+JNBe/xLy27eIN6MyLR5i9AcU9kscuMlOLbvxdf1R+MM21Lwpsr5UVMsEMfNALlFlpvooygQ8AIu7R0mrNZWiwwzzmJoOHuKlUb1vZhuQCH0BwnsS2P3xBx9Sbo9UJ/1+i/84WDY649bHzKvufv+6CfjM/sy51KmvMedETrHXKUB+WFfTjTvf4KPXPZaLupiyMP0crqXGgoA9gNJVhVwD8Hq9NQFl8pnsVvxADN2YMIVdM57IBIcqFEIFojOsfBM5rlLGJcw9P9z5Y/Go0mnPXl+1e+e+60mlkFTiKip0IqqhymXWtuz2j+4RG/SfnXQH0Jmg56D6Q3hjMaYyq0m7aeqv/DH7W573J74/e7gUlmQ7Yz9frs/zt80YyyRyhdNTMOEESrFv1FC3BvMBWG0dXJ0/L17dOweHZvFC5Y8Kq/CVmI6X8BzJEgAIZaIREIXxAsMYiUkjq2yJQyXlKrQmgZpQAJOwXl0u2AoJoe2VZk+0jiK2zo1W2t7qTY94KJD23rd7o0n496FPxn5nct+d9Q6OaogUqWy3ooyDs7GfLUfYTQUetjwrYLaHEuTYYVEU7WtkyqM2lZaJm6gUaoYGbn0VgxLzEWFEfcv+mdX8Pb0Fj4nmy3GaXVeu3vR60+uRv6w377wlbOVXmxMf+H3x5PO5ZVxzPVT/cRR779+Pk89bLDZ9fvj3vjtZPR2NPYvTsGpvLGhAvHyx9FEm+Kkc3551R0ML1/1uv5w8sofjnqX/VNw7plRZeGiPRr7w1ym4uOWqd3+aDIY+me9N+v563dbgFJVFJ6qEwdXz897nd5A4ToFp/i4derZf7r94lz1XJ089F/0LvuTdH0LT5sTU7d+Mby8GqwBNt5WAUejXyaGhZf+21NwSs8bk8eXw/YLfzIYXp71zhWFypsqQBq9et1TcPLft0waXT0fdYa9wVjJWISoDFTB/zo3VHvLv/6fdQA9KiSKIlD/JRz/viSCSOxV/UPvVnEh4urDbpVQVDlQc7AG38PxkclYKJGuCnIme4K7qsbflAcVORN0Z8KjPsyGGFGSLKOs1N6PDklFUrh2Evvtd03rf0eX/T9H6bffdxNSqe7BSHV+3IlWQUiOqFD7CnchZSLMBYeYuhxHGAkMekk5DrWk+Q7lwczUkSqS2cmnYDN5izh2VWGj9iJYuAGLY0Y1uyHhMZ3zv4rVHdQySpvcpvad2jaaI0L/nIV/HXcd4UAfjkqWi7tWlHWg1+W02QxZILyYBJwpZXgBi5uYuktVqy05Nj9dfQbZXArMiy+y7ZrS3oxEWLh6MIjIyUHAKMWBdCVzCxB7kA0ikpJOuU7hg4i4KJH/viH4trV+ZbQOltX+72ToDy5bzqNITCe5rQXi0Br6nVeTl/7b1vPO9yc//vDjD8+/P+r+6yf/yZOfuk/+dXLc8Z8/8X/6rt197h+fnPzUOVPbpgsWktkKVmzJQeiTaQEREdIy9zohnsI7xINFC8XhD9+9h0ywBAXXSO3jy8JxnLBUp4rvptrNaoYhRoTa8Bl+tbR9SIzNlhslspkS9hRhL1yD6xeWdfACS7jI6IAgc72VvcarismqeSoe187dy2Sv8Qpc9VPH2pxByZdC4tCbJ3MvbObo1TOg8MaACMxvMId6zYDrchzc6Hkq1Zul+qo+tytMag9RGva8hwe+bHmqBNbVXuoxusRAH8HNXOjw66XtmjjwgnmWZelKVh/cNBcsTl1d+bh1YA7Cr0PCwcmnWbVvm1NCrSDcmHerNJN7e+TNGZtHWPvCnDXn7Ng7Pva+8yJCl3eu9iFPIu7NP6ZugDi4HagQAvfu4wx2AVvZyuTCzoMAYnSdhloYpa5QqGjhBnGi6ilhpXX3i8taveSjiqnqqO49mLNskkbgGESnjgFRU04draNvt9pNtRDtlyPXp3NCVZYXCRNEMr7yNsOEudSona1MFMZMVbrGj7IgO+WIBou8wINYrC+ubhm/jhgKxWNAH0WMhMR8u1vNiYQgYhTnljMncrGcarOpRdtE18LFhld3ChTfSUuZ4/p10WzdpGhQggdF/NpLrfwOaD2vQOI+6G/oxMqm1+ZeCkRm6CuxAmksrp5FczJfyPzGF5BQbrYCxAsbS+tAb9hUJFS7ufbLkYJM9wrqVxMp9Tm+Zflvxv6w3z7XNWXLdj6Visxms1SgesW60gsitgxRknhfbKty9tSyM9uKEUVzrCJAGdgpEbat0dXZWe+NP5pkZWKOagfYGuql//ZV++p8rLhseTdoGe2kZ6kfOYmJQdPKBapM9vuvesPL/oXfH2tkrfVFSEeBVFNRCRqIOK0KW1vUZtxogMo726r155MjeHIEm1cc39JFrpdTHMjIenn13O+Mz7Pzl9axd3zkHVnpVq7VegZddktVPNFbIgOV52rnUwX+C/zcatmp75nS6zwPWEIyjuY4zXcoIUKHB4WUUyyxyOqgZvb/m00COpfo7NbU2a2Z8eQyKFyyqFmZjCk3i5iF8P/vts4qZqf6OVmC+mrxo2ah5ixCdO6GOClqNVMpR7eeibQqzwaMSuWyZieh4JohTpomtWRFgycW8BnEwqpLx98gDReFDMy9fqVTQBeueZ71VG49I1xI0D0gQGZVANNToTv+8B2Rnip58vPwzmX/rPfiatjWp0tj/2Kg4uXOCaduob1E4jjRF8Bf7O14d6EsYssRbV7n6XtiPFMxsCqfZOAMXnc927Ks0uZx+/I/XyxvEMXiFnHijhCVC8RR3Fxz4s5RFGG+ak4XQg+7Opef4Gb75cho3vVP/OYYx4mqJZoVlah35pLfyi4It80oXU+UVGMpX4LOlmVdIAGCxdhcnzNu+mcKq5y1+NhbCdjl3p+6vp+tsLpLbfC6e08XkG3lDUAV9EqG7dg3O4I0sc1+oLThwrTxzIhlZRc7rQ8mwro6yahN4h+/TPpg5Wn1xbA9+GWdyD+YVo+MKGR9EHOOkoWfoi02QxRRtc/P/eHb7TiMDd6Dpd0Z9175k25v6HfGl8O3+RVXr7sVM1qqRZckbbJDy5BgGmDReHf0vkSlsgdIOQEUSHKDISQcB2qHr3b7pgmPKGM4BWcf9pTHaiOt3pxAqwV2u3s2qhjoAYw5icFG4UzY5m4f0xDYTNkWoZAto/IWIpWlKCQ1xtejegTEOtjOsXzU1mJNuplYk0zgxzAa9Ced856+DPI7Q398CKXOuqzdbbvc95pMZVG0SHVrr/ITDsHF0BBNpYp/Os1macKHuovr6pKtlbV7vdbbteL97QEMEBd4Uy/ZbWMyu9OhIWsI0g9zTDFXOS3BMSyFCuqDszc13Crk5e4qjRPHBufMHOCbNQwwRZywdAGKN+yDszeT88tOmoNEQpWKvWR2VzPVv6ibmvWxVLrCwNmU29lGuTJSIFS3TFOT0ZS4g7M3afcXoXAKja0UGmDUguP1/MZWqo11++O24Kz8o93d2z02fOHbOcNXMnWVSNLMjeSONKW5dV3E5zuEXUe8/eIiNLz1tYIXLIVksa7JBua43CscQXnCtGxe5CVpHqRb+1FrfP7V2kOIvJLbQ38PEsDkktyo9mM/G2no8+9N9stZuoCpMvAQRkspvcReGWmFp2olXN2FPIiHLM+a5eZFbipot2rGbDqK3KdvHqSL8takrA2Dr8LA1rMQcLYPPcgRTP2csTRazmbkTjG2Ff02DovnLgXw0uuHcHaNV69U4dLtj2q4KqKtcFR3oANO7ds/YUSvLkqM1aGv8FU4gyp1ZUDDy4/xWqWRCoKNzpOaZpSySKZKz6QJqRhwnDK8AZkTK2HQbaoDxqIUiXh39N4L2JLKRqvYDlTmdN3/U+wF2gPzTTwiH3GrAFTPVlmwjJ9iK0+t6gxHxYcdWDNeCtMrC1Junaq2UpVx6+OlDDUKY0KvBOa6h61Vhay6WLG7BmznU+nFF3sHISEWXrKcRiR4iVdaw9d41VWlb6vStdOAZ7A9ZesjjI0TBlVj62s8GkJsPvVQRXr6/Y6iIpm+cAWUkEIV7tn7fnpzD0e7TgH2rpH2q3TSS5hH6c5hYL71QJn1Poby3usCywULYUu9U+Fqcn752h+muzp7syNOb9wa706XSYL56fuG+j1it/r3D4V+6n03XbXkN3SVvr4vRpJQSS1XplWzVY/FWLTiNGeiVl92EBFM5aRw22Hfy0EdppZT97aGjUJJonaa5ccS5S0r7xmWe6F2qSL4bmqmAFonsgr1muG9uLnGK33nMdI14BDPzBVIr1thbxP/w9hNn03g23PeHxTAlLP9NFTuR2ufcLb9U4i2+UwOhTMBUxRc67uyrfUREum5SX7xRmih5Vwy4HhO9Nd06UfuhO5f6zmf7p/0RXFae1xIUQRVsDXnpu6dMW5E3bPQ87YeT25WwPeEzW0B8mHx7G/24bpzjb2opuc0dUa9j/3ONjpf7s/I2xbi8O9M1ds++8y/T60c4uefauovocPNbz+1/EwudBtU1ojvfcVe3VHxzCc9rWsPLyC7s0iP7dovR2DuQR6nh6/p+zxY6K5LnERspdtm8jsP6wD+nhbCX94+H/a6Wat26+To+Ef36Il7dOwuVlNOwmpLeRbpsu4C85Ggvk9PhZ3iiN1mf01hV9cX+pjC5eHTpSo+la/gwXWzeOZmNZpreg345rGB6wpds7lp4ZvD7iqoc6AsN7khFdtq3AI75pDGzVPGmj8S7nmotQPbXmdKu7jRRzNbeCofzlQ7+rFMTVbbSLG5a6/11H8tpmYp67sQDUxqseaTb523TsEpG+detLNG4MwFqkiscnddbd9RoUXJsjrnV6aS9s/6rcqtbH4fnueTVjm9VMZN7G9tpoNsXv45RGv9ZUQ2VvniobXlS4g1Sb/dvxpMLvsT/01v3JohldPzwVyoXr+nj/edoqDZvPzwv3hsYVm6AXDKmBSSoyR9Tv+CBXZD/Yd/MA0IFtlcFeldFdJEdgU7A9vTjRJrZe9x81poHpsSiviqfq+CwW5XZ+qL05nC4kEH0YYEvqTgn/gwxkJu3JimbZuSLYNFgazrn/ievJOpYBIL6a67USzLsv4vAAD//1kDpdM5SQAA'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
