{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
