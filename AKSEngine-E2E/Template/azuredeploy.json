{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"','AKSENGINE_NEW_NODE_COUNT=','\"',parameters('aksEngineNewNodeCount'),'\"','AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineK8sUpgradeVersion'),'\"','AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"','AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"','AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    H4sIAAAAAAAA/8Q8a3fauLbf/Sv2dbxOknNqk6Qzc2bo0LkUnJbbBDhA+phOlytsAZoYyZUESfr473dJso0xhtCZtoe1JoOt/dLWfkna9OB/oDYmtDZGYmYJLMHFlmUdHByAdQAAv4rFfI743WP9pD4XbCqALWSykDC+g4TjBNOI0ClESGJANIKYTSHGSxyDvEvwkc854w/gBnFK6PQBEDphwDgsMR8zgY89w6m2xurXBHE0B4rmuGGf2o9HdwkGyRRtD45eoJhEsETxAgtAHNfBxTBhHLDh5d7op5ylS/Sz4vwAcCxwzvzXmmZUwdTzPPtxz0wUhzMGQnJCp946Bsdywal43GUU/1rLnswYvg1xIgmj6ejqOcOdI34tHrdQHOMIboicEQoCzTGIkJNECk+RNEBqTayYTQOt2aNjsD6CpRYkRAKD7ZzaQKiVLpKLj43MtnOkluUY3uhVeAtQBxucj/9bP/ucAQPAo0c55s0G5kujxbdbMNMvOQGyQaBDJ+wt3Mv6n8dQxnxhVmkba/2ABQqtzzttdoAlv4MpWWIKIZvPlZGOsxd0MR9jDmwCksyxAEKNSm8wzNASw4xIQPQOJojEC473stZuTpMr1t52KzuzH79ERGreMMbyBmN6L5I2zVY6EclgjAHf4nAhcfRfNU8tdziPAjIJUnUVDFWNEiwazukj8+IGEdlwztIn7aBK+86RwO/hFJwU4fgRRCy3L20HDz8/gjfg/AYufg8nAG/hH/+AMcfoGj59AhFjnICjyKe0I0Zx+jV3IRUU7EyJfqo+cIgxA89+BLutSscgFfLIBCYkVktAhNQBkEiYIQGUUfiAOYPxncTCg85EhSyFRBiFBAmBBczZEgtDQDKg+AZiFmqIvSxtyBY8xHCu8LtojnebWhsLSajhvw1lP5NpIaomLLVZmLALIYswnOYOpOcUMawUIVPtMA6CfMBAhNaM9zWsLpzh8DpANAqULgP0YcGxkCi8DkJGJ2S64HrCR8fw0dImQCbwBlwBzim8hUcgZzgPnCXzOGcLGsGhc3qoZpUgOYNDp/+yfWiWWcCUYyQxBzlDa2ttm9AUC1xFGYOtta8JlzREaMZC+YNRE8SYTuXMAx3EYYYSlXMhWqiEBOMFiXUCJlTlqma/A3MW4VgRCOOFUPJFeEIo0VZl5xLp9Ts1zkesYhxf18IlWyryk1xkyeDQOTs0lMQiYjBfKm06Z9UulsRY+VaolKUorUTUNLUJmWAsJJonOk/zOUrF3emFLb0A0PcvDa0xEjgCRjN6OORY7udJmC9JiCHhhIYkiXGGvNOjWphLMiGhFuL8lRGC7nbEhyW0TPYKtO8bv0NGl5jLQLIgxFyuPGZ9Rds4ZNrgjIKUOfwpcsvSKdw5hU96LX76AVw3wjo0PAZF1VOwO6xtiJZpNYlMhafoO2eeXUQJkVwRg0/w53s49BTKIXwCycGN4A+7UoTURqt5+7eSo1DbqJxhHaJvGI/SmfWbw+HL3qDdcI4q+WfgRRmOqxTYMnrOp0moZJDgORizT9mxBFMhYkiuQ3F6Bq5KjWfgUhZhAa5iRkwWqTuZZOCyhQTn4T31UIsld9oPVagcqlAJnDEzo8wqJQOUJJwlnKhHIdm22uf72iimYsFxwX/E0bH1sULJV0lkok1hVqJyWrZZo+bvVwN/OGq2ngeDXm8UtPzBqHPeaTVHfjDsXQ1aftBvjp417NoS8VpMxrUbhKaYylpRGi/Bc/teem1/OMqoLQSvqZwf18QMcVwLkVsUuYY+iAIDL+TS3mHCam31lGHC2RwOnT2nlUb1vYQ+hELoDxPYl8duwJz82uz2IH3e6T71B/1BpztqvMu85vbHk1+Mz+wrnEuZ8h53QugUc5UG5Lt9JdGy/w058rlXSlEVQ75ML/W91FBAsL+QZVkB9zAsg6cuuFA+i92SB5ixAxOuoHXRAZHgUI1COEN0ioVnMs9twriEgf+fK384GgatZvDkqtu+8Bs1LMOaEHFNkRVlD1MutbJnVT+4RBdpfzjoLxGzQcNguiSc0TmmcqtJ+6nqL/1Rs90cNQO/2+73lAXZzsjvNruj/E1tjiVS+aKGaZQwQqX4DSXEXWIuCKONs5PTH92TU/fk1CxeuODx+ipsZabzBTxBgoQQYYlILPSGeIZB3AmJ59a6JQwWlKrQmgZpQALq4BzdzBiak2PbKoEPNY1iWaegtbYXqugBFx3b1stmZxSMOpd+MPRbvW572Dg7KRFSW2VdijIOzga8qkcYjYQeNnKroDbF0mRYIdFYlXVShVHbSreJG2SUKoZmXroUwxJzURLE/Uofu0S3o0v4nG22GPUyXLN92ekGV0N/0G1e+srZ1l5sgD/1u6Og1bsyjrl6qgYcdn73czj1sCFm2++OOqPXwfD1cORf1sEpvbGhhPH852GgTTFoXfSu2v1B70Wn7Q+CF/5g2Ol16+DcA1EW4bI5HPmDfE7Fxy2g7e4w6A/8886rFfzq3RakVBWFpzJg/+rJRafV6StadXCKj1tBz//T7hZh1XMZeOA/7fS6Qbq+hadNwNStnw56V/0VwsbbMuJw+CwwIjz3X9fBWXveAB71Bs2nftAf9M47F4pD6U0ZIY1enXYdnPz7FqDh1ZNha9Dpj9QcixilgTL613NDVVt+/Y91AB0qJIpjUP8lHL9fEEEk9sr+oatVXIi4+rBbJRS1Hag4WIMf4fTEZCyUSFcFOZM9wb0rx99UBhU5E3RrwqM+zIY5oiRZxNlWez8+JJ2SorWT2Z/vNa//G/a6f4/Tn+93M1Kp7ouJ6vy4k6zCkBxRoeoKdyZlIswFhxi7HMcYCQx6STmO9EzzCuWLhaliVWSzU07BJvIGceyqjY2qRbBwQzafM6rFjQif0yn/WqLu4JZx2pQ2te/UttEUEfr3LPzbuOsQh/pwVLJ8uitFWQd6Xeq1WsRC4c1JyJlShheyeQ1Td6H2aguOzV9Xn0HWFgLz4ousXFPam5AYC1cPhjE5OwgZpTiUrmRuAWMPtmFMUtap1Cl+GBMXJfK3JcE3jdUro3WwrObvwcDv9xrOUSzGQW5roTi2Bn7rRfDcf9140vrx7Oeffv7pyY8n7X//4j98+Ev74b/PTlv+k4f+Lz8020/807OzX1rnqmy6ZBGZ3MEdW3AQ+mRaQEyEtMy9ToTH8AbxcNZA8+inH95CNrEEhddI1fHrk+M4YalOldw1Vc1qgWGOCLXhE/xhafuQGJuSGyWyljL2FGMvWqHrF5Z18BRLuMz4gCBTXcpe47uSySo4FY8rYfcy2Wt8B676q2NtLqDkCyFx5E2TqRfVcvLqGVC0NCgC8yXmUK0ZcF2Ow6WGU6neLNU39bldYVJ7iNKw53154MuWp8xgtdtLPUZvMdAHcDMXOv52absiDjxlnmVZeierD25qMzZPXV35uHVgDsKvI8LBycGsyre1MaFWGG3A3SjN5N4ee1PGpjHWvjBltSk79U5PvR+8mNDFrat9yJOIe9MPqRsgDm4LSozAvf0wgV3IVrYy+WSnYQhzdJ2GWhimrlDY0cIScaL2U8JK991Pe5V6yUeVUOVR3XswZRmQJuAYQnXHoCiQuqN19P1Wu6YWovl86Pp0SqjK8iJhgkjG77zNMGEuNSqhlYnCiKmdrvGjLMiOOaLhLN/gwVysLq5uGL+OGYrEA0AfxBwJifl2t5oSCWHMKM4tZ0rkbDHWZlNJtoauhYuNrO4YKL6VljLH1eui2bpJ0aAED4v0tZda+R3QCq7A4j7s7+jEyqZX5r4WiMzQNxIF0lhcPovmZDqT+Y0vIKHc7A4QLxSW1oEu2FQkVNVc8/lQYaa1gvpqIqU+x7cs/9XIH3SbF3pP2bCdj2ubzFptbYPqFfeVXhizRYSSxPtsW6Wzp4ad2dYcUTTFKgKsIztrjG1reHV+3nnlD4Nsm5iT2oG2wnruv37RvLoYKSkb3hIt4p38LPUnZxEYMo18QiVgv/uiM+h1L/3uSBNrrC5CWgqlnIrWsIGIenmylZvaTBqNUHpnW5X+fHYCD09g84rje7rI9WKMQxlbz6+e+K3RRXb+0tDp499WWso1Go+hzW6oiie6JDJYea52PpbwP8OvjYad+p7Zel3kAUtIxtEUp/kOJUTo8KCIcoolFtk+qJb9f7nJQOcSnd1qOrvVMplcBoVLFgWVzTGVZjZnEfzr9h6oZMv4xmtrLZ2tj2aZ7JsFmooVnbIY0akb4aSo/kz3HN14JiSrhBwyKpVvm5JD4dUinNRMDsp2F56YwScQM6sqb3+HfF2cZGgaAEotBXqHmydkTyXhc8KFBN0sAmRSRjDNF7o1EN8S6VlWdkjeeGes1dUOqxLuXz+Yf2flIerpoNl/tgqK78y1ecYUsjvlKUfJzE/JFi+Wi6SaFxf+4PV2GiiOMb+7h0qzNeq88IN2Z+C3Rr3B6/y6oNPeShkt5AxTSdKGJbSICKYhFodvTt6ucSnF01QSQKEkSwwR4ThU1ZKqnExDE4lU2ARnH/E827J0T0/5FBoaDbCb7fOhvd7ocwAjTuZgo2gibHNPimkEbAIxmxIK2TIqOyESiABFpOJGrEP1CIiVPU6xPGrqaQXtbFpBNuEHMOx3g9ZFRx+s+62BPzqGtS6lrHVo+7zvNZnSougpVa29cmEcgYvhUNSUKv7p1GprAO+qLgHLS7ZS1u71WqW+4l3YAfQRF3hTL9nNTTK51WVP1lyhH6aYYq7cPsFzWAiVgPrnryqkVcTXO1U0TbUdVjQn5jDUrGGIKeKEpQtQvK3sn78KLnqt5kjlQVskVKnYSya3FaD+ZRVo1hNQ6rABZ3PezjbOpZECo6plGpuGQjXd/vmrtJOGqE304VYOh2DUgucr+MOtXA89u/Ji2jSnKYOCMQqvdYW61WiQSD0sL3cJLVz0qhIZT4nuYUtbywnd30Wcj/cDfVaSVszjnFAUQxltJbnRkDIfPdU9rX/Vfmfl3YGbMaXZ3jukbMSP7xdAvlF4mBDLKgXy4KL30h+kAtubl41apsM39UWSYF5/e6i+x+xGf39nfWF2uDfEpzv5I2E6BvumYRDFfXOi+wDWFXiJ5YxFsCXQpxWU2ex02o3NiLDaC3XaRZR0VG9gdmEV4IrozavRM6UP48zBpT961ms37DAmmMqgsFFdk3ODT2N3VErRSqpvmNS7vwvco/J7lLt7qiY3VK+GrQt3e5vaK4ZbV8NR79LcYecq2tDabt2o8BegyLhCFd2UVslcOu3vUnHnybc5uASJ50msHkwWbj4fgqm5H6S1VPo+j+j6QgonMbvTJ4oZvmcdwH/nduXZ6yeDTju7xVbF+s/uyUNVr8/uxpxE5dv2LB1lBy+mf1IfNaSTHeOY3WQ/NNl1II4+pHh5jnOpipHrpxPgulkQdbP62DXHMHxjLwKuKxaTCbl10z11jgvO1iOZFdI1vtNnLW5ERQGheBpTFMfU724e7VfykWi/2n0XtX3SxU5p9OZpi0zr+69yswOWqclqGymee++1nvqHdBVLWX1BY3BSizXd8Lq4qIOzbpx78c7uSDMXKBOx1i8eKo9kC6e3VsXNxPYjgxmjIWIF9Bo+wzV8i+ZJjEXxQKfggqYj3GpdXJmeHP+829gJmYXEbVFwfXx7EE7h8u6UxqpRJRsrNaA0tjSmrFj6ze5VP+h1A/9VZ9SYIJXh8sF8gp1uR+8QnOKkM7h8/1A88MwGm/1OHqvsjWBl53L7gxedlh9cNrvNp742wFVVvI9jWnk3ZdY0qCkNCmRKoSeXcHs5fr8/59dF5kyjCjcdyiHXD1K2enimmFLsy86Kt0fHDPO5/zrIo+AmWjFG7liFF5dFdDs/oqaqBNmm83Ukp+qwO2c5fKZESesTEgVcINuy9GXemDEpJEdJ+pz+Gg27kf4RL6YhwSKDXZA4clUOFmn97E7A9vQJ58q9d5bO5tdThYugMaGI31WXfRjsZhlS/yxqoqh40EL0UAJfUPDPfBhhkVds+kdMk43746/XG1Y+vFrdgd7fqJkHpTo4+fctQOkBQN1Ze/5LfXWbDXX3dNKVApeWdu1NGSELUnVwsq8bzaSrUFUHp/C0tYOxHGOg2MhYHtxgt7VGUNy37zdL17mlwFMHp/xqA2Ut0CiEtRfbOilLDlzoqCyNlAlUBaI6OFWvN3jfE5CUEPeA3Lt4ZYK7AaqaUrP4lfakZo9/vwu5ciOorKPqfZldtimsg5N93VRvvjfUmsyfNtytcjenvK5yYCe6YVPGrQ4emyUIOJvv9rCagrXvGP3+Pc17Rcevlxr0P5nxL2xSpsRCuqvCFR7rNwHHYhFLAfk/rzHwh1cXo4bz28bWUgGaeV5djOz84Mo8gxtLeLiecHX2O1klVP2cwuucqD//HwAA//9tswsc5UMAAA=='))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
