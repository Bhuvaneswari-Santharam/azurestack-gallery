{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
