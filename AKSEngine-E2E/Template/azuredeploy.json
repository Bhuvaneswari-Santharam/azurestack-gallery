{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "linuxAdminUsername": {
      "type": "string",
      "defaultValue": "azureuser",
      "metadata": {
        "description": "User name for the Linux Virtual Machines that are part of the Kubernetes cluster and DVM."
      }
    },
    "sshPublicKey": {
      "metadata": {
        "description": "SSH public key used for auth to all Linux machines created as part of the the Kubernetes cluster and DVM."
      },
      "type": "string"
    },
    "masterProfileDnsPrefix": {
      "type": "string",
      "metadata": {
        "description": "This must be a region-unique name e.g. k8s-12345. Try to chose it same as the resource group name as best practice."
      }
    },
    "agentPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Node Pool Profile Count"
      },
      "type": "int"
    },
    "agentPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes node VMs"
      },
      "type": "string"
    },
    "masterPoolProfileCount": {
      "defaultValue": 3,
      "metadata": {
        "description": "Kubernetes Master Pool Profile Count"
      },
      "type": "int"
    },
    "masterPoolProfileVMSize": {
      "defaultValue": "Standard_D2_v2",
      "metadata": {
        "description": "The VMSize of Kubernetes master VMs"
      },
      "type": "string"
    },
    "storageProfile": {
      "defaultValue": "manageddisk",
      "metadata": {
        "description": "The Storage Profile"
      },
      "type": "string"
    },
    "servicePrincipalClientId": {
      "metadata": {
        "description": "The Service Principal application ID (used by the Kubernetes Azure cloud provider). More help here: https://github.com/Azure/aks-engine/blob/master/docs/topics/service-principals.md"
      },
      "type": "securestring"
    },
    "servicePrincipalClientSecret": {
      "metadata": {
        "description": "The Service Principal Client Secret."
      },
      "type": "securestring"
    },
    "servicePrincipalCertificateKeyVaultId": {
      "defaultValue": "servicePrincipalCertificateKeyVaultId",
      "metadata": {
        "description": "the service Principal Certificate KeyVault Id"
      },
      "type": "string"
    },
    "servicePrincipalCertificateKeyVaultSecretName": {
      "defaultValue": "servicePrincipalCertificateKeyVaultSecretName",
      "metadata": {
        "description": "The service Principal Certificate KeyVault SecretName"
      },
      "type": "string"
    },
    "identitySystem": {
      "defaultValue": "AzureAD",
      "allowedValues": [
        "AzureAD",
        "ADFS"
      ],
      "metadata": {
        "description": "The identity system of azure stack. The value could be AzureAD or ADFS"
      },
      "type": "string"
    },
    "aksEngineNodeCount": {
      "defaultValue": 5,
      "metadata": {
        "description": "The aks engine scale node count"
      },
      "type": "int"
    },
    "aksEngineUpgradeVersion": {
      "metadata": {
        "description": "The kubernetes upgrade version using aks engine"
      },
      "type": "string"
    },
    "aksEngineApiModel": {
      "defaultValue":"https://raw.githubusercontent.com/honcao/aks-engine/e2e/examples/kubernetes-azure-stack.json",
      "metadata": {
        "description": "The API Model to be used for kubernetes deployment using aks engine "
      },
      "type": "string"
    },

    "aksEngineRepository": {
      "metadata": {
        "description": "The Aks Engine Repository to be used for building aks engine binary"
      },
      "type": "string"
    },

    "aksEngineBranch": {
      "metadata": {
        "description": "The Aks Engine branch to be used for building the aks engine binary"
      },
      "type": "string"
    },
    "kubernetesAzureCloudProviderVersion": {
      "type": "string",
      "defaultValue": "1.11",
      "metadata": {
        "description": "This is the version for the Kubernetes Azure cloud provider. We would use a custom Kubernetes build specifically for Azure Stack for each version."
      }
    }
  },
  "variables": {
    "resourceGroupName": "[resourceGroup().name]",
    "dnsNameForPublicIP": "[toLower(concat('vmd-dns', parameters('masterProfileDnsPrefix')))]",
    "location": "[resourceGroup().location]",
    "imagePublisher": "Canonical",
    "imageOffer": "UbuntuServer",
    "imageSku": "16.04-LTS",
    "imageVersion": "latest",
    "vmSize": "Standard_D2_v2",
    "OSDiskName": "osdisk",
    "nicName": "[concat('vmd-vnic', uniqueString(resourceGroup().id))]",
    "addressPrefix": "10.0.0.0/24",
    "subnetName": "mySubnet",
    "subnetPrefix": "10.0.0.0/24",
    "storageAccountName": "[concat('vmdsa', uniquestring(resourceGroup().id))]",
    "storageAccountType": "Standard_LRS",
    "publicIPAddressName": "[concat('vmd-publicIP', uniqueString(resourceGroup().id))]",
    "publicIPAddressType": "Static",
    "vmStorageAccountContainerName": "vhds",
    "vmName": "[concat('vmd-', uniqueString(resourceGroup().id))]",
    "virtualNetworkName": "[concat('vmd-vnet-', uniqueString(resourceGroup().id))]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
    "networkSecurityGroupName": "[tolower(concat('vmd-nsg',uniquestring(resourceGroup().id)))]",
    "sshKeyPath": "[concat('/home/',parameters('linuxAdminUsername'),'/.ssh/authorized_keys')]",
    "tenantSubscriptionId": "[subscription().subscriptionId]",
    "scriptName": "script",
    "singleQuote": "'",
    "scriptParameters": "[concat('IDENTITY_SYSTEM=','\"',parameters('identitySystem'),'\"',' RESOURCE_GROUP_NAME=','\"',variables('resourceGroupName'),'\"',' PUBLICIP_DNS=','\"',variables('dnsNameForPublicIP'),'\"' ,' TENANT_ID=','\"',subscription().tenantId,'\"' ,' TENANT_SUBSCRIPTION_ID=','\"',variables('tenantSubscriptionId'),'\"',' ADMIN_USERNAME=','\"',parameters('linuxAdminUsername'),'\"',' MASTER_DNS_PREFIX=','\"',parameters('masterProfileDnsPrefix'),'\"' ,' AGENT_COUNT=','\"',parameters('agentPoolProfileCount'),'\"' ,' AGENT_SIZE=','\"',parameters('agentPoolProfileVMSize'),'\"' ,' MASTER_COUNT=','\"',parameters('masterPoolProfileCount'),'\"',' MASTER_SIZE=','\"',parameters('masterPoolProfileVMSize'),'\"' ,' SPN_CLIENT_ID=','\"',parameters('servicePrincipalClientId'),'\"' ,' SPN_CLIENT_SECRET=','\"',parameters('servicePrincipalClientSecret'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_ID=','\"',parameters('servicePrincipalCertificateKeyVaultId'),'\"' ,' SPN_CLIENT_SECRET_KEYVAULT_SECRET_NAME=','\"',parameters('servicePrincipalCertificateKeyVaultSecretName'),'\"' ,' K8S_AZURE_CLOUDPROVIDER_VERSION=','\"',parameters('kubernetesAzureCloudProviderVersion'),'\"' ,' REGION_NAME=','\"',variables('location'),'\"' ,' SSH_PUBLICKEY=','\"',parameters('sshPublicKey'),'\"' ,' STORAGE_PROFILE=','\"',parameters('storageProfile'),'\"',' AKSENGINE_NODE_COUNT=','\"',parameters('aksEngineNodeCount'),'\"',' AKSENGINE_UPGRADE_VERSION=','\"',parameters('aksEngineUpgradeVersion'),'\"',' AKSENGINE_API_MODEL=','\"',parameters('aksEngineApiModel'),'\"',' AKSENGINE_REPO=','\"',parameters('aksEngineRepository'),'\"',' AKSENGINE_BRANCH=','\"',parameters('aksEngineBranch'),'\"')]"
  },
  "resources": [
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[toLower(variables('storageAccountName'))]",
      "apiVersion": "2015-06-15",
      "location": "[variables('location')]",
      "properties": {
        "accountType": "[variables('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkSecurityGroups",
      "name": "[variables('networkSecurityGroupName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "securityRules": [
          {
            "name": "ssh",
            "properties": {
              "description": "Allow SSH",
              "protocol": "Tcp",
              "sourcePortRange": "*",
              "destinationPortRange": "22",
              "sourceAddressPrefix": "*",
              "destinationAddressPrefix": "*",
              "access": "Allow",
              "priority": 200,
              "direction": "Inbound"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/publicIPAddresses",
      "name": "[variables('publicIPAddressName')]",
      "location": "[variables('location')]",
      "properties": {
        "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
        "dnsSettings": {
          "domainNameLabel": "[variables('dnsNameForPublicIP')]"
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('virtualNetworkName')]",
      "location": "[variables('location')]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[variables('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[variables('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nicName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]",
        "[variables('networkSecurityGroupName')]"
      ],
      "properties": {
        "networkSecurityGroup": {
          "id": "[resourceId('Microsoft.Network/networkSecurityGroups', variables('networkSecurityGroupName'))]"
        },
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "publicIPAddress": {
                "id": "[resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName'))]"
              },
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2016-03-30",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[variables('location')]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[variables('vmSize')]"
        },
        "osProfile": {
          "customData": "[base64(concat('#cloud-config\n\nwrite_files:\n- path: \"/opt/azure/containers/script.sh\"\n  permissions: \"0744\"\n  encoding: gzip\n  owner: \"root\"\n  content: !!binary |\n    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'))]",
          "computerName": "[variables('vmName')]",
          "adminUsername": "[parameters('linuxAdminUsername')]",
          "linuxConfiguration": {
            "disablePasswordAuthentication": "true",
            "ssh": {
              "publicKeys": [
                {
                  "keyData": "[parameters('sshPublicKey')]",
                  "path": "[variables('sshKeyPath')]"
                }
              ]
            }
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSku')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat(reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob, variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          }
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[reference(concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName')), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).primaryEndpoints.blob]"
          }
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(variables('vmName'),'/LinuxCustomScriptExtension')]",
      "apiVersion": "2016-03-30",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/publicIPAddresses/', variables('publicIPAddressName'))]",
        "[concat('Microsoft.Compute/virtualMachines/', variables('vmName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Azure.Extensions",
        "type": "CustomScript",
        "typeHandlerVersion": "2.0",
        "autoUpgradeMinorVersion": "true",
        "protectedSettings": {
          "commandToExecute": "[concat(variables('scriptParameters'), ' PUBLICIP_FQDN=', '\"', reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn,'\"',' /bin/bash /opt/azure/containers/script.sh >> /var/log/azure/deploy-script-dvm.log 2>&1')]"
        }
      }
    }
  ],
  "outputs": {
    "dvmPublicIpFqdn": {
      "value": "[reference(resourceId('Microsoft.Network/publicIPAddresses',variables('publicIPAddressName')),'2015-06-15').dnsSettings.fqdn]",
      "type": "string"
    }
  }
}
